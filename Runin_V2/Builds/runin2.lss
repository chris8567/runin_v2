
Builds/runin2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  000018c6  0000195a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018c6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001b3  0080013a  0080013a  00001994  2**0
                  ALLOC
  3 .stab         000004f8  00000000  00000000  00001994  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000093c  00000000  00000000  00001e8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000027c8  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000a0  00000000  00000000  000027e0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000003b6  00000000  00000000  00002880  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000064  00000000  00000000  00002c36  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000001f4  00000000  00000000  00002c9a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 01 	jmp	0x268	; 0x268 <__ctors_end>
       4:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
       8:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
       c:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__vector_3>
      10:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      14:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      18:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      1c:	0c 94 4b 04 	jmp	0x896	; 0x896 <__vector_7>
      20:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      24:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      28:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      2c:	0c 94 97 0b 	jmp	0x172e	; 0x172e <__vector_11>
      30:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      34:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      38:	0c 94 27 04 	jmp	0x84e	; 0x84e <__vector_14>
      3c:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      40:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      44:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      48:	0c 94 0a 0b 	jmp	0x1614	; 0x1614 <__vector_18>
      4c:	0c 94 e3 0a 	jmp	0x15c6	; 0x15c6 <__vector_19>
      50:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__vector_20>
      54:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      58:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      5c:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      60:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>
      64:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 c0       	rjmp	.+0      	; 0x6a <__trampolines_end+0x2>
      6a:	c1 01       	movw	r24, r2
      6c:	c3 03       	fmuls	r20, r19
      6e:	02 c2       	rjmp	.+1028   	; 0x474 <eMBRegHoldingCB+0x52>
      70:	c6 06       	cpc	r12, r22
      72:	07 c7       	rjmp	.+3598   	; 0xe82 <xMBRTUReceiveFSM+0x72>
      74:	05 c5       	rjmp	.+2570   	; 0xa80 <eMBRegisterCB+0x30>
      76:	c4 04       	cpc	r12, r4
      78:	cc 0c       	add	r12, r12
      7a:	0d cd       	rjmp	.-1510   	; 0xfffffa96 <__eeprom_end+0xff7efa96>
      7c:	0f cf       	rjmp	.-482    	; 0xfffffe9c <__eeprom_end+0xff7efe9c>
      7e:	ce 0e       	add	r12, r30
      80:	0a ca       	rjmp	.-3052   	; 0xfffff496 <__eeprom_end+0xff7ef496>
      82:	cb 0b       	sbc	r28, r27
      84:	c9 09       	sbc	r28, r9
      86:	08 c8       	rjmp	.-4080   	; 0xfffff098 <__eeprom_end+0xff7ef098>
      88:	d8 18       	sub	r13, r8
      8a:	19 d9       	rcall	.-3534   	; 0xfffff2be <__eeprom_end+0xff7ef2be>
      8c:	1b db       	rcall	.-2506   	; 0xfffff6c4 <__eeprom_end+0xff7ef6c4>
      8e:	da 1a       	sub	r13, r26
      90:	1e de       	rcall	.-964    	; 0xfffffcce <__eeprom_end+0xff7efcce>
      92:	df 1f       	adc	r29, r31
      94:	dd 1d       	adc	r29, r13
      96:	1c dc       	rcall	.-1992   	; 0xfffff8d0 <__eeprom_end+0xff7ef8d0>
      98:	14 d4       	rcall	.+2088   	; 0x8c2 <__vector_7+0x2c>
      9a:	d5 15       	cp	r29, r5
      9c:	d7 17       	cp	r29, r23
      9e:	16 d6       	rcall	.+3116   	; 0xccc <eMBRTUInit+0x5c>
      a0:	d2 12       	cpse	r13, r18
      a2:	13 d3       	rcall	.+1574   	; 0x6ca <timer0_isr+0x5a>
      a4:	11 d1       	rcall	.+546    	; 0x2c8 <SYS_init+0x22>
      a6:	d0 10       	cpse	r13, r0
      a8:	f0 30       	cpi	r31, 0x00	; 0
      aa:	31 f1       	breq	.+76     	; 0xf8 <__trampolines_end+0x90>
      ac:	33 f3       	brvs	.-52     	; 0x7a <__trampolines_end+0x12>
      ae:	f2 32       	cpi	r31, 0x22	; 34
      b0:	36 f6       	brtc	.-116    	; 0x3e <__SP_H__>
      b2:	f7 37       	cpi	r31, 0x77	; 119
      b4:	f5 35       	cpi	r31, 0x55	; 85
      b6:	34 f4       	brge	.+12     	; 0xc4 <__trampolines_end+0x5c>
      b8:	3c fc       	.word	0xfc3c	; ????
      ba:	fd 3d       	cpi	r31, 0xDD	; 221
      bc:	ff 3f       	cpi	r31, 0xFF	; 255
      be:	3e fe       	.word	0xfe3e	; ????
      c0:	fa 3a       	cpi	r31, 0xAA	; 170
      c2:	3b fb       	.word	0xfb3b	; ????
      c4:	39 f9       	.word	0xf939	; ????
      c6:	f8 38       	cpi	r31, 0x88	; 136
      c8:	28 e8       	ldi	r18, 0x88	; 136
      ca:	e9 29       	or	r30, r9
      cc:	eb 2b       	or	r30, r27
      ce:	2a ea       	ldi	r18, 0xAA	; 170
      d0:	ee 2e       	mov	r14, r30
      d2:	2f ef       	ldi	r18, 0xFF	; 255
      d4:	2d ed       	ldi	r18, 0xDD	; 221
      d6:	ec 2c       	mov	r14, r12
      d8:	e4 24       	eor	r14, r4
      da:	25 e5       	ldi	r18, 0x55	; 85
      dc:	27 e7       	ldi	r18, 0x77	; 119
      de:	e6 26       	eor	r14, r22
      e0:	22 e2       	ldi	r18, 0x22	; 34
      e2:	e3 23       	and	r30, r19
      e4:	e1 21       	and	r30, r1
      e6:	20 e0       	ldi	r18, 0x00	; 0
      e8:	a0 60       	ori	r26, 0x00	; 0
      ea:	61 a1       	ldd	r22, Z+33	; 0x21
      ec:	63 a3       	std	Z+35, r22	; 0x23
      ee:	a2 62       	ori	r26, 0x22	; 34
      f0:	66 a6       	std	Z+46, r6	; 0x2e
      f2:	a7 67       	ori	r26, 0x77	; 119
      f4:	a5 65       	ori	r26, 0x55	; 85
      f6:	64 a4       	ldd	r6, Z+44	; 0x2c
      f8:	6c ac       	ldd	r6, Y+60	; 0x3c
      fa:	ad 6d       	ori	r26, 0xDD	; 221
      fc:	af 6f       	ori	r26, 0xFF	; 255
      fe:	6e ae       	std	Y+62, r6	; 0x3e
     100:	aa 6a       	ori	r26, 0xAA	; 170
     102:	6b ab       	std	Y+51, r22	; 0x33
     104:	69 a9       	ldd	r22, Y+49	; 0x31
     106:	a8 68       	ori	r26, 0x88	; 136
     108:	78 b8       	out	0x08, r7	; 8
     10a:	b9 79       	andi	r27, 0x99	; 153
     10c:	bb 7b       	andi	r27, 0xBB	; 187
     10e:	7a ba       	out	0x1a, r7	; 26
     110:	be 7e       	andi	r27, 0xEE	; 238
     112:	7f bf       	out	0x3f, r23	; 63
     114:	7d bd       	out	0x2d, r23	; 45
     116:	bc 7c       	andi	r27, 0xCC	; 204
     118:	b4 74       	andi	r27, 0x44	; 68
     11a:	75 b5       	in	r23, 0x25	; 37
     11c:	77 b7       	in	r23, 0x37	; 55
     11e:	b6 76       	andi	r27, 0x66	; 102
     120:	72 b2       	in	r7, 0x12	; 18
     122:	b3 73       	andi	r27, 0x33	; 51
     124:	b1 71       	andi	r27, 0x11	; 17
     126:	70 b0       	in	r7, 0x00	; 0
     128:	50 90 91 51 	lds	r5, 0x5191
     12c:	93 53       	subi	r25, 0x33	; 51
     12e:	52 92       	st	-Z, r5
     130:	96 56       	subi	r25, 0x66	; 102
     132:	57 97       	sbiw	r26, 0x17	; 23
     134:	55 95       	asr	r21
     136:	94 54       	subi	r25, 0x44	; 68
     138:	9c 5c       	subi	r25, 0xCC	; 204
     13a:	5d 9d       	mul	r21, r13
     13c:	5f 9f       	mul	r21, r31
     13e:	9e 5e       	subi	r25, 0xEE	; 238
     140:	5a 9a       	sbi	0x0b, 2	; 11
     142:	9b 5b       	subi	r25, 0xBB	; 187
     144:	99 59       	subi	r25, 0x99	; 153
     146:	58 98       	cbi	0x0b, 0	; 11
     148:	88 48       	sbci	r24, 0x88	; 136
     14a:	49 89       	ldd	r20, Y+17	; 0x11
     14c:	4b 8b       	std	Y+19, r20	; 0x13
     14e:	8a 4a       	sbci	r24, 0xAA	; 170
     150:	4e 8e       	std	Y+30, r4	; 0x1e
     152:	8f 4f       	sbci	r24, 0xFF	; 255
     154:	8d 4d       	sbci	r24, 0xDD	; 221
     156:	4c 8c       	ldd	r4, Y+28	; 0x1c
     158:	44 84       	ldd	r4, Z+12	; 0x0c
     15a:	85 45       	sbci	r24, 0x55	; 85
     15c:	87 47       	sbci	r24, 0x77	; 119
     15e:	46 86       	std	Z+14, r4	; 0x0e
     160:	82 42       	sbci	r24, 0x22	; 34
     162:	43 83       	std	Z+3, r20	; 0x03
     164:	41 81       	ldd	r20, Z+1	; 0x01
     166:	80 40       	sbci	r24, 0x00	; 0

00000168 <aucCRCHi>:
     168:	00 c1 81 40 01 c0 80 41 01 c0 80 41 00 c1 81 40     ...@...A...A...@
     178:	01 c0 80 41 00 c1 81 40 00 c1 81 40 01 c0 80 41     ...A...@...@...A
     188:	01 c0 80 41 00 c1 81 40 00 c1 81 40 01 c0 80 41     ...A...@...@...A
     198:	00 c1 81 40 01 c0 80 41 01 c0 80 41 00 c1 81 40     ...@...A...A...@
     1a8:	01 c0 80 41 00 c1 81 40 00 c1 81 40 01 c0 80 41     ...A...@...@...A
     1b8:	00 c1 81 40 01 c0 80 41 01 c0 80 41 00 c1 81 40     ...@...A...A...@
     1c8:	00 c1 81 40 01 c0 80 41 01 c0 80 41 00 c1 81 40     ...@...A...A...@
     1d8:	01 c0 80 41 00 c1 81 40 00 c1 81 40 01 c0 80 41     ...A...@...@...A
     1e8:	01 c0 80 41 00 c1 81 40 00 c1 81 40 01 c0 80 41     ...A...@...@...A
     1f8:	00 c1 81 40 01 c0 80 41 01 c0 80 41 00 c1 81 40     ...@...A...A...@
     208:	00 c1 81 40 01 c0 80 41 01 c0 80 41 00 c1 81 40     ...@...A...A...@
     218:	01 c0 80 41 00 c1 81 40 00 c1 81 40 01 c0 80 41     ...A...@...@...A
     228:	00 c1 81 40 01 c0 80 41 01 c0 80 41 00 c1 81 40     ...@...A...A...@
     238:	01 c0 80 41 00 c1 81 40 00 c1 81 40 01 c0 80 41     ...A...@...@...A
     248:	01 c0 80 41 00 c1 81 40 00 c1 81 40 01 c0 80 41     ...A...@...@...A
     258:	00 c1 81 40 01 c0 80 41 01 c0 80 41 00 c1 81 40     ...@...A...A...@

00000268 <__ctors_end>:
     268:	11 24       	eor	r1, r1
     26a:	1f be       	out	0x3f, r1	; 63
     26c:	cf ef       	ldi	r28, 0xFF	; 255
     26e:	d4 e0       	ldi	r29, 0x04	; 4
     270:	de bf       	out	0x3e, r29	; 62
     272:	cd bf       	out	0x3d, r28	; 61

00000274 <__do_copy_data>:
     274:	11 e0       	ldi	r17, 0x01	; 1
     276:	a0 e0       	ldi	r26, 0x00	; 0
     278:	b1 e0       	ldi	r27, 0x01	; 1
     27a:	e6 ec       	ldi	r30, 0xC6	; 198
     27c:	f8 e1       	ldi	r31, 0x18	; 24
     27e:	02 c0       	rjmp	.+4      	; 0x284 <__do_copy_data+0x10>
     280:	05 90       	lpm	r0, Z+
     282:	0d 92       	st	X+, r0
     284:	aa 33       	cpi	r26, 0x3A	; 58
     286:	b1 07       	cpc	r27, r17
     288:	d9 f7       	brne	.-10     	; 0x280 <__do_copy_data+0xc>

0000028a <__do_clear_bss>:
     28a:	22 e0       	ldi	r18, 0x02	; 2
     28c:	aa e3       	ldi	r26, 0x3A	; 58
     28e:	b1 e0       	ldi	r27, 0x01	; 1
     290:	01 c0       	rjmp	.+2      	; 0x294 <.do_clear_bss_start>

00000292 <.do_clear_bss_loop>:
     292:	1d 92       	st	X+, r1

00000294 <.do_clear_bss_start>:
     294:	ad 3e       	cpi	r26, 0xED	; 237
     296:	b2 07       	cpc	r27, r18
     298:	e1 f7       	brne	.-8      	; 0x292 <.do_clear_bss_loop>
     29a:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <main>
     29e:	0c 94 61 0c 	jmp	0x18c2	; 0x18c2 <_exit>

000002a2 <__bad_interrupt>:
     2a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002a6 <SYS_init>:
     2a6:	ef 92       	push	r14
     2a8:	0f 93       	push	r16
     2aa:	1f 93       	push	r17
     2ac:	cf 93       	push	r28
     2ae:	df 93       	push	r29
     2b0:	f9 99       	sbic	0x1f, 1	; 31
     2b2:	fe cf       	rjmp	.-4      	; 0x2b0 <SYS_init+0xa>
     2b4:	80 e1       	ldi	r24, 0x10	; 16
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	0e 94 30 0c 	call	0x1860	; 0x1860 <__eerd_byte_m168p>
     2bc:	8e 3e       	cpi	r24, 0xEE	; 238
     2be:	91 f0       	breq	.+36     	; 0x2e4 <SYS_init+0x3e>
     2c0:	80 91 d3 01 	lds	r24, 0x01D3
     2c4:	87 7c       	andi	r24, 0xC7	; 199
     2c6:	80 93 d3 01 	sts	0x01D3, r24
     2ca:	80 91 9d 01 	lds	r24, 0x019D
     2ce:	90 91 9e 01 	lds	r25, 0x019E
     2d2:	89 2b       	or	r24, r25
     2d4:	e9 f4       	brne	.+58     	; 0x310 <SYS_init+0x6a>
     2d6:	82 e0       	ldi	r24, 0x02	; 2
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	90 93 9e 01 	sts	0x019E, r25
     2de:	80 93 9d 01 	sts	0x019D, r24
     2e2:	16 c0       	rjmp	.+44     	; 0x310 <SYS_init+0x6a>
     2e4:	81 e1       	ldi	r24, 0x11	; 17
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	0e 94 30 0c 	call	0x1860	; 0x1860 <__eerd_byte_m168p>
     2ec:	80 93 d3 01 	sts	0x01D3, r24
     2f0:	03 e9       	ldi	r16, 0x93	; 147
     2f2:	11 e0       	ldi	r17, 0x01	; 1
     2f4:	c2 e1       	ldi	r28, 0x12	; 18
     2f6:	d0 e0       	ldi	r29, 0x00	; 0
     2f8:	ce 01       	movw	r24, r28
     2fa:	0e 94 38 0c 	call	0x1870	; 0x1870 <__eerd_word_m168p>
     2fe:	f8 01       	movw	r30, r16
     300:	81 93       	st	Z+, r24
     302:	91 93       	st	Z+, r25
     304:	8f 01       	movw	r16, r30
     306:	22 96       	adiw	r28, 0x02	; 2
     308:	c2 32       	cpi	r28, 0x22	; 34
     30a:	d1 05       	cpc	r29, r1
     30c:	a9 f7       	brne	.-22     	; 0x2f8 <SYS_init+0x52>
     30e:	d8 cf       	rjmp	.-80     	; 0x2c0 <SYS_init+0x1a>
     310:	80 91 9f 01 	lds	r24, 0x019F
     314:	90 91 a0 01 	lds	r25, 0x01A0
     318:	89 2b       	or	r24, r25
     31a:	31 f4       	brne	.+12     	; 0x328 <SYS_init+0x82>
     31c:	82 e0       	ldi	r24, 0x02	; 2
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	90 93 a0 01 	sts	0x01A0, r25
     324:	80 93 9f 01 	sts	0x019F, r24
     328:	80 91 99 01 	lds	r24, 0x0199
     32c:	90 91 9a 01 	lds	r25, 0x019A
     330:	89 2b       	or	r24, r25
     332:	31 f4       	brne	.+12     	; 0x340 <SYS_init+0x9a>
     334:	82 e0       	ldi	r24, 0x02	; 2
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	90 93 9a 01 	sts	0x019A, r25
     33c:	80 93 99 01 	sts	0x0199, r24
     340:	80 91 9b 01 	lds	r24, 0x019B
     344:	90 91 9c 01 	lds	r25, 0x019C
     348:	89 2b       	or	r24, r25
     34a:	31 f4       	brne	.+12     	; 0x358 <SYS_init+0xb2>
     34c:	82 e0       	ldi	r24, 0x02	; 2
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	90 93 9c 01 	sts	0x019C, r25
     354:	80 93 9b 01 	sts	0x019B, r24
     358:	82 e0       	ldi	r24, 0x02	; 2
     35a:	e8 2e       	mov	r14, r24
     35c:	00 e0       	ldi	r16, 0x00	; 0
     35e:	1b e4       	ldi	r17, 0x4B	; 75
     360:	20 e0       	ldi	r18, 0x00	; 0
     362:	30 e0       	ldi	r19, 0x00	; 0
     364:	40 e0       	ldi	r20, 0x00	; 0
     366:	6c e0       	ldi	r22, 0x0C	; 12
     368:	80 e0       	ldi	r24, 0x00	; 0
     36a:	0e 94 cf 04 	call	0x99e	; 0x99e <eMBInit>
     36e:	0e 94 64 02 	call	0x4c8	; 0x4c8 <RELAY_init>
     372:	0e 94 84 02 	call	0x508	; 0x508 <SERVO_init>
     376:	df 91       	pop	r29
     378:	cf 91       	pop	r28
     37a:	1f 91       	pop	r17
     37c:	0f 91       	pop	r16
     37e:	ef 90       	pop	r14
     380:	0c 94 6f 04 	jmp	0x8de	; 0x8de <PCINT_init>

00000384 <eMBRegCoilsCB>:
     384:	ef 92       	push	r14
     386:	ff 92       	push	r15
     388:	0f 93       	push	r16
     38a:	1f 93       	push	r17
     38c:	cf 93       	push	r28
     38e:	df 93       	push	r29
     390:	68 3e       	cpi	r22, 0xE8	; 232
     392:	33 e0       	ldi	r19, 0x03	; 3
     394:	73 07       	cpc	r23, r19
     396:	d8 f1       	brcs	.+118    	; 0x40e <eMBRegCoilsCB+0x8a>
     398:	fa 01       	movw	r30, r20
     39a:	e6 0f       	add	r30, r22
     39c:	f7 1f       	adc	r31, r23
     39e:	e9 36       	cpi	r30, 0x69	; 105
     3a0:	f4 40       	sbci	r31, 0x04	; 4
     3a2:	a8 f5       	brcc	.+106    	; 0x40e <eMBRegCoilsCB+0x8a>
     3a4:	ea 01       	movw	r28, r20
     3a6:	8b 01       	movw	r16, r22
     3a8:	08 5e       	subi	r16, 0xE8	; 232
     3aa:	13 40       	sbci	r17, 0x03	; 3
     3ac:	22 23       	and	r18, r18
     3ae:	21 f0       	breq	.+8      	; 0x3b8 <eMBRegCoilsCB+0x34>
     3b0:	21 30       	cpi	r18, 0x01	; 1
     3b2:	79 f5       	brne	.+94     	; 0x412 <eMBRegCoilsCB+0x8e>
     3b4:	7c 01       	movw	r14, r24
     3b6:	25 c0       	rjmp	.+74     	; 0x402 <eMBRegCoilsCB+0x7e>
     3b8:	7c 01       	movw	r14, r24
     3ba:	1c 16       	cp	r1, r28
     3bc:	1d 06       	cpc	r1, r29
     3be:	4c f5       	brge	.+82     	; 0x412 <eMBRegCoilsCB+0x8e>
     3c0:	c9 30       	cpi	r28, 0x09	; 9
     3c2:	d1 05       	cpc	r29, r1
     3c4:	14 f4       	brge	.+4      	; 0x3ca <eMBRegCoilsCB+0x46>
     3c6:	4c 2f       	mov	r20, r28
     3c8:	01 c0       	rjmp	.+2      	; 0x3cc <eMBRegCoilsCB+0x48>
     3ca:	48 e0       	ldi	r20, 0x08	; 8
     3cc:	b8 01       	movw	r22, r16
     3ce:	83 ed       	ldi	r24, 0xD3	; 211
     3d0:	91 e0       	ldi	r25, 0x01	; 1
     3d2:	0e 94 4d 0a 	call	0x149a	; 0x149a <xMBUtilGetBits>
     3d6:	f7 01       	movw	r30, r14
     3d8:	81 93       	st	Z+, r24
     3da:	7f 01       	movw	r14, r30
     3dc:	28 97       	sbiw	r28, 0x08	; 8
     3de:	08 5f       	subi	r16, 0xF8	; 248
     3e0:	1f 4f       	sbci	r17, 0xFF	; 255
     3e2:	eb cf       	rjmp	.-42     	; 0x3ba <eMBRegCoilsCB+0x36>
     3e4:	f7 01       	movw	r30, r14
     3e6:	21 91       	ld	r18, Z+
     3e8:	7f 01       	movw	r14, r30
     3ea:	c9 30       	cpi	r28, 0x09	; 9
     3ec:	d1 05       	cpc	r29, r1
     3ee:	6c f4       	brge	.+26     	; 0x40a <eMBRegCoilsCB+0x86>
     3f0:	4c 2f       	mov	r20, r28
     3f2:	b8 01       	movw	r22, r16
     3f4:	83 ed       	ldi	r24, 0xD3	; 211
     3f6:	91 e0       	ldi	r25, 0x01	; 1
     3f8:	0e 94 19 0a 	call	0x1432	; 0x1432 <xMBUtilSetBits>
     3fc:	28 97       	sbiw	r28, 0x08	; 8
     3fe:	08 5f       	subi	r16, 0xF8	; 248
     400:	1f 4f       	sbci	r17, 0xFF	; 255
     402:	1c 16       	cp	r1, r28
     404:	1d 06       	cpc	r1, r29
     406:	74 f3       	brlt	.-36     	; 0x3e4 <eMBRegCoilsCB+0x60>
     408:	04 c0       	rjmp	.+8      	; 0x412 <eMBRegCoilsCB+0x8e>
     40a:	48 e0       	ldi	r20, 0x08	; 8
     40c:	f2 cf       	rjmp	.-28     	; 0x3f2 <eMBRegCoilsCB+0x6e>
     40e:	81 e0       	ldi	r24, 0x01	; 1
     410:	01 c0       	rjmp	.+2      	; 0x414 <eMBRegCoilsCB+0x90>
     412:	80 e0       	ldi	r24, 0x00	; 0
     414:	df 91       	pop	r29
     416:	cf 91       	pop	r28
     418:	1f 91       	pop	r17
     41a:	0f 91       	pop	r16
     41c:	ff 90       	pop	r15
     41e:	ef 90       	pop	r14
     420:	08 95       	ret

00000422 <eMBRegHoldingCB>:
     422:	cf 93       	push	r28
     424:	68 3e       	cpi	r22, 0xE8	; 232
     426:	33 e0       	ldi	r19, 0x03	; 3
     428:	73 07       	cpc	r23, r19
     42a:	08 f4       	brcc	.+2      	; 0x42e <eMBRegHoldingCB+0xc>
     42c:	44 c0       	rjmp	.+136    	; 0x4b6 <eMBRegHoldingCB+0x94>
     42e:	fa 01       	movw	r30, r20
     430:	e6 0f       	add	r30, r22
     432:	f7 1f       	adc	r31, r23
     434:	e9 30       	cpi	r30, 0x09	; 9
     436:	f4 40       	sbci	r31, 0x04	; 4
     438:	f0 f5       	brcc	.+124    	; 0x4b6 <eMBRegHoldingCB+0x94>
     43a:	22 23       	and	r18, r18
     43c:	51 f0       	breq	.+20     	; 0x452 <eMBRegHoldingCB+0x30>
     43e:	21 30       	cpi	r18, 0x01	; 1
     440:	e1 f5       	brne	.+120    	; 0x4ba <eMBRegHoldingCB+0x98>
     442:	fc 01       	movw	r30, r24
     444:	66 0f       	add	r22, r22
     446:	77 1f       	adc	r23, r23
     448:	6d 56       	subi	r22, 0x6D	; 109
     44a:	7e 4f       	sbci	r23, 0xFE	; 254
     44c:	80 e0       	ldi	r24, 0x00	; 0
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	1a c0       	rjmp	.+52     	; 0x486 <eMBRegHoldingCB+0x64>
     452:	fc 01       	movw	r30, r24
     454:	66 0f       	add	r22, r22
     456:	77 1f       	adc	r23, r23
     458:	6d 56       	subi	r22, 0x6D	; 109
     45a:	7e 4f       	sbci	r23, 0xFE	; 254
     45c:	80 e0       	ldi	r24, 0x00	; 0
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	02 96       	adiw	r24, 0x02	; 2
     462:	14 16       	cp	r1, r20
     464:	15 06       	cpc	r1, r21
     466:	4c f5       	brge	.+82     	; 0x4ba <eMBRegHoldingCB+0x98>
     468:	db 01       	movw	r26, r22
     46a:	a8 0f       	add	r26, r24
     46c:	b9 1f       	adc	r27, r25
     46e:	a2 5d       	subi	r26, 0xD2	; 210
     470:	b7 40       	sbci	r27, 0x07	; 7
     472:	11 96       	adiw	r26, 0x01	; 1
     474:	2c 91       	ld	r18, X
     476:	11 97       	sbiw	r26, 0x01	; 1
     478:	20 83       	st	Z, r18
     47a:	2c 91       	ld	r18, X
     47c:	21 83       	std	Z+1, r18	; 0x01
     47e:	41 50       	subi	r20, 0x01	; 1
     480:	51 09       	sbc	r21, r1
     482:	32 96       	adiw	r30, 0x02	; 2
     484:	ed cf       	rjmp	.-38     	; 0x460 <eMBRegHoldingCB+0x3e>
     486:	02 96       	adiw	r24, 0x02	; 2
     488:	14 16       	cp	r1, r20
     48a:	15 06       	cpc	r1, r21
     48c:	b4 f4       	brge	.+44     	; 0x4ba <eMBRegHoldingCB+0x98>
     48e:	20 81       	ld	r18, Z
     490:	30 e0       	ldi	r19, 0x00	; 0
     492:	32 2f       	mov	r19, r18
     494:	22 27       	eor	r18, r18
     496:	db 01       	movw	r26, r22
     498:	a8 0f       	add	r26, r24
     49a:	b9 1f       	adc	r27, r25
     49c:	a2 5d       	subi	r26, 0xD2	; 210
     49e:	b7 40       	sbci	r27, 0x07	; 7
     4a0:	11 96       	adiw	r26, 0x01	; 1
     4a2:	3c 93       	st	X, r19
     4a4:	2e 93       	st	-X, r18
     4a6:	c1 81       	ldd	r28, Z+1	; 0x01
     4a8:	2c 2b       	or	r18, r28
     4aa:	2d 93       	st	X+, r18
     4ac:	3c 93       	st	X, r19
     4ae:	41 50       	subi	r20, 0x01	; 1
     4b0:	51 09       	sbc	r21, r1
     4b2:	32 96       	adiw	r30, 0x02	; 2
     4b4:	e8 cf       	rjmp	.-48     	; 0x486 <eMBRegHoldingCB+0x64>
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	01 c0       	rjmp	.+2      	; 0x4bc <eMBRegHoldingCB+0x9a>
     4ba:	80 e0       	ldi	r24, 0x00	; 0
     4bc:	cf 91       	pop	r28
     4be:	08 95       	ret

000004c0 <eMBRegDiscreteCB>:
     4c0:	84 e0       	ldi	r24, 0x04	; 4
     4c2:	08 95       	ret

000004c4 <eMBRegInputCB>:
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	08 95       	ret

000004c8 <RELAY_init>:
     4c8:	84 b1       	in	r24, 0x04	; 4
     4ca:	80 6c       	ori	r24, 0xC0	; 192
     4cc:	84 b9       	out	0x04, r24	; 4
     4ce:	85 b1       	in	r24, 0x05	; 5
     4d0:	85 b9       	out	0x05, r24	; 5
     4d2:	08 95       	ret

000004d4 <RELAY_poll>:
     4d4:	fc 01       	movw	r30, r24
     4d6:	80 81       	ld	r24, Z
     4d8:	98 2f       	mov	r25, r24
     4da:	92 70       	andi	r25, 0x02	; 2
     4dc:	90 93 42 01 	sts	0x0142, r25
     4e0:	84 70       	andi	r24, 0x04	; 4
     4e2:	80 93 41 01 	sts	0x0141, r24
     4e6:	80 91 42 01 	lds	r24, 0x0142
     4ea:	88 23       	and	r24, r24
     4ec:	11 f0       	breq	.+4      	; 0x4f2 <RELAY_poll+0x1e>
     4ee:	2e 9a       	sbi	0x05, 6	; 5
     4f0:	01 c0       	rjmp	.+2      	; 0x4f4 <RELAY_poll+0x20>
     4f2:	2e 98       	cbi	0x05, 6	; 5
     4f4:	80 91 41 01 	lds	r24, 0x0141
     4f8:	88 23       	and	r24, r24
     4fa:	11 f0       	breq	.+4      	; 0x500 <__stack+0x1>
     4fc:	2f 9a       	sbi	0x05, 7	; 5
     4fe:	08 95       	ret
     500:	2f 98       	cbi	0x05, 7	; 5
     502:	08 95       	ret

00000504 <SERVO_enable>:
     504:	5b 98       	cbi	0x0b, 3	; 11
     506:	08 95       	ret

00000508 <SERVO_init>:
     508:	0e 94 18 04 	call	0x830	; 0x830 <timer0_comp_init>
     50c:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <timer2_init>
     510:	8a b1       	in	r24, 0x0a	; 10
     512:	88 63       	ori	r24, 0x38	; 56
     514:	8a b9       	out	0x0a, r24	; 10
     516:	5b 9a       	sbi	0x0b, 3	; 11
     518:	0e 94 82 02 	call	0x504	; 0x504 <SERVO_enable>
     51c:	80 91 95 01 	lds	r24, 0x0195
     520:	90 91 96 01 	lds	r25, 0x0196
     524:	90 93 4c 01 	sts	0x014C, r25
     528:	80 93 4b 01 	sts	0x014B, r24
     52c:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <timer2_enable>

00000530 <SERVO_disable>:
     530:	5b 9a       	sbi	0x0b, 3	; 11
     532:	08 95       	ret

00000534 <SERVO_get_position>:
     534:	80 91 4b 01 	lds	r24, 0x014B
     538:	90 91 4c 01 	lds	r25, 0x014C
     53c:	08 95       	ret

0000053e <SERVO_calib>:
     53e:	90 93 4c 01 	sts	0x014C, r25
     542:	80 93 4b 01 	sts	0x014B, r24
     546:	90 93 96 01 	sts	0x0196, r25
     54a:	80 93 95 01 	sts	0x0195, r24
     54e:	08 95       	ret

00000550 <SERVO_send_pulse>:
     550:	66 23       	and	r22, r22
     552:	11 f0       	breq	.+4      	; 0x558 <SERVO_send_pulse+0x8>
     554:	5c 9a       	sbi	0x0b, 4	; 11
     556:	01 c0       	rjmp	.+2      	; 0x55a <SERVO_send_pulse+0xa>
     558:	5c 98       	cbi	0x0b, 4	; 11
     55a:	20 e0       	ldi	r18, 0x00	; 0
     55c:	30 e0       	ldi	r19, 0x00	; 0
     55e:	28 17       	cp	r18, r24
     560:	39 07       	cpc	r19, r25
     562:	f1 f0       	breq	.+60     	; 0x5a0 <SERVO_send_pulse+0x50>
     564:	5d 9a       	sbi	0x0b, 5	; 11
     566:	e9 ec       	ldi	r30, 0xC9	; 201
     568:	f4 e0       	ldi	r31, 0x04	; 4
     56a:	31 97       	sbiw	r30, 0x01	; 1
     56c:	f1 f7       	brne	.-4      	; 0x56a <SERVO_send_pulse+0x1a>
     56e:	00 00       	nop
     570:	5d 98       	cbi	0x0b, 5	; 11
     572:	e9 ec       	ldi	r30, 0xC9	; 201
     574:	f4 e0       	ldi	r31, 0x04	; 4
     576:	31 97       	sbiw	r30, 0x01	; 1
     578:	f1 f7       	brne	.-4      	; 0x576 <SERVO_send_pulse+0x26>
     57a:	00 00       	nop
     57c:	40 91 4b 01 	lds	r20, 0x014B
     580:	50 91 4c 01 	lds	r21, 0x014C
     584:	66 23       	and	r22, r22
     586:	19 f0       	breq	.+6      	; 0x58e <SERVO_send_pulse+0x3e>
     588:	4f 5f       	subi	r20, 0xFF	; 255
     58a:	5f 4f       	sbci	r21, 0xFF	; 255
     58c:	02 c0       	rjmp	.+4      	; 0x592 <SERVO_send_pulse+0x42>
     58e:	41 50       	subi	r20, 0x01	; 1
     590:	51 09       	sbc	r21, r1
     592:	50 93 4c 01 	sts	0x014C, r21
     596:	40 93 4b 01 	sts	0x014B, r20
     59a:	2f 5f       	subi	r18, 0xFF	; 255
     59c:	3f 4f       	sbci	r19, 0xFF	; 255
     59e:	df cf       	rjmp	.-66     	; 0x55e <SERVO_send_pulse+0xe>
     5a0:	08 95       	ret

000005a2 <SERVO_set_position>:
     5a2:	8d 32       	cpi	r24, 0x2D	; 45
     5a4:	2b e0       	ldi	r18, 0x0B	; 11
     5a6:	92 07       	cpc	r25, r18
     5a8:	68 f5       	brcc	.+90     	; 0x604 <SERVO_set_position+0x62>
     5aa:	20 91 4b 01 	lds	r18, 0x014B
     5ae:	30 91 4c 01 	lds	r19, 0x014C
     5b2:	82 17       	cp	r24, r18
     5b4:	93 07       	cpc	r25, r19
     5b6:	31 f1       	breq	.+76     	; 0x604 <SERVO_set_position+0x62>
     5b8:	e4 ef       	ldi	r30, 0xF4	; 244
     5ba:	ff e0       	ldi	r31, 0x0F	; 15
     5bc:	31 97       	sbiw	r30, 0x01	; 1
     5be:	f1 f7       	brne	.-4      	; 0x5bc <SERVO_set_position+0x1a>
     5c0:	00 c0       	rjmp	.+0      	; 0x5c2 <SERVO_set_position+0x20>
     5c2:	00 00       	nop
     5c4:	20 91 4b 01 	lds	r18, 0x014B
     5c8:	30 91 4c 01 	lds	r19, 0x014C
     5cc:	28 17       	cp	r18, r24
     5ce:	39 07       	cpc	r19, r25
     5d0:	40 f4       	brcc	.+16     	; 0x5e2 <SERVO_set_position+0x40>
     5d2:	20 91 4b 01 	lds	r18, 0x014B
     5d6:	30 91 4c 01 	lds	r19, 0x014C
     5da:	61 e0       	ldi	r22, 0x01	; 1
     5dc:	82 1b       	sub	r24, r18
     5de:	93 0b       	sbc	r25, r19
     5e0:	09 c0       	rjmp	.+18     	; 0x5f4 <SERVO_set_position+0x52>
     5e2:	20 91 4b 01 	lds	r18, 0x014B
     5e6:	30 91 4c 01 	lds	r19, 0x014C
     5ea:	60 e0       	ldi	r22, 0x00	; 0
     5ec:	a9 01       	movw	r20, r18
     5ee:	48 1b       	sub	r20, r24
     5f0:	59 0b       	sbc	r21, r25
     5f2:	ca 01       	movw	r24, r20
     5f4:	0e 94 a8 02 	call	0x550	; 0x550 <SERVO_send_pulse>
     5f8:	84 ef       	ldi	r24, 0xF4	; 244
     5fa:	9f e0       	ldi	r25, 0x0F	; 15
     5fc:	01 97       	sbiw	r24, 0x01	; 1
     5fe:	f1 f7       	brne	.-4      	; 0x5fc <SERVO_set_position+0x5a>
     600:	00 c0       	rjmp	.+0      	; 0x602 <SERVO_set_position+0x60>
     602:	00 00       	nop
     604:	08 95       	ret

00000606 <SERVO_poll>:
     606:	cf 93       	push	r28
     608:	df 93       	push	r29
     60a:	eb 01       	movw	r28, r22
     60c:	fc 01       	movw	r30, r24
     60e:	80 81       	ld	r24, Z
     610:	83 ff       	sbrs	r24, 3
     612:	15 c0       	rjmp	.+42     	; 0x63e <SERVO_poll+0x38>
     614:	80 91 48 01 	lds	r24, 0x0148
     618:	81 11       	cpse	r24, r1
     61a:	27 c0       	rjmp	.+78     	; 0x66a <SERVO_poll+0x64>
     61c:	8a 81       	ldd	r24, Y+2	; 0x02
     61e:	9b 81       	ldd	r25, Y+3	; 0x03
     620:	00 97       	sbiw	r24, 0x00	; 0
     622:	19 f1       	breq	.+70     	; 0x66a <SERVO_poll+0x64>
     624:	90 93 4a 01 	sts	0x014A, r25
     628:	80 93 49 01 	sts	0x0149, r24
     62c:	80 91 97 01 	lds	r24, 0x0197
     630:	8d 5f       	subi	r24, 0xFD	; 253
     632:	0e 94 04 04 	call	0x808	; 0x808 <timer0_enable>
     636:	81 e0       	ldi	r24, 0x01	; 1
     638:	80 93 48 01 	sts	0x0148, r24
     63c:	16 c0       	rjmp	.+44     	; 0x66a <SERVO_poll+0x64>
     63e:	80 91 48 01 	lds	r24, 0x0148
     642:	81 30       	cpi	r24, 0x01	; 1
     644:	61 f4       	brne	.+24     	; 0x65e <SERVO_poll+0x58>
     646:	10 92 48 01 	sts	0x0148, r1
     64a:	0e 94 12 04 	call	0x824	; 0x824 <timer0_disable>
     64e:	80 91 49 01 	lds	r24, 0x0149
     652:	90 91 4a 01 	lds	r25, 0x014A
     656:	90 93 96 01 	sts	0x0196, r25
     65a:	80 93 95 01 	sts	0x0195, r24
     65e:	8a 81       	ldd	r24, Y+2	; 0x02
     660:	9b 81       	ldd	r25, Y+3	; 0x03
     662:	df 91       	pop	r29
     664:	cf 91       	pop	r28
     666:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <SERVO_set_position>
     66a:	df 91       	pop	r29
     66c:	cf 91       	pop	r28
     66e:	08 95       	ret

00000670 <timer0_isr>:
     670:	80 91 00 01 	lds	r24, 0x0100
     674:	88 23       	and	r24, r24
     676:	21 f0       	breq	.+8      	; 0x680 <timer0_isr+0x10>
     678:	5d 9a       	sbi	0x0b, 5	; 11
     67a:	10 92 00 01 	sts	0x0100, r1
     67e:	04 c0       	rjmp	.+8      	; 0x688 <timer0_isr+0x18>
     680:	5d 98       	cbi	0x0b, 5	; 11
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	80 93 00 01 	sts	0x0100, r24
     688:	80 91 00 01 	lds	r24, 0x0100
     68c:	88 23       	and	r24, r24
     68e:	a9 f1       	breq	.+106    	; 0x6fa <timer0_isr+0x8a>
     690:	80 91 47 01 	lds	r24, 0x0147
     694:	88 23       	and	r24, r24
     696:	a9 f0       	breq	.+42     	; 0x6c2 <timer0_isr+0x52>
     698:	5c 9a       	sbi	0x0b, 4	; 11
     69a:	20 91 4b 01 	lds	r18, 0x014B
     69e:	30 91 4c 01 	lds	r19, 0x014C
     6a2:	80 91 49 01 	lds	r24, 0x0149
     6a6:	90 91 4a 01 	lds	r25, 0x014A
     6aa:	28 17       	cp	r18, r24
     6ac:	39 07       	cpc	r19, r25
     6ae:	30 f4       	brcc	.+12     	; 0x6bc <timer0_isr+0x4c>
     6b0:	80 91 4b 01 	lds	r24, 0x014B
     6b4:	90 91 4c 01 	lds	r25, 0x014C
     6b8:	01 96       	adiw	r24, 0x01	; 1
     6ba:	0f c0       	rjmp	.+30     	; 0x6da <timer0_isr+0x6a>
     6bc:	10 92 47 01 	sts	0x0147, r1
     6c0:	14 c0       	rjmp	.+40     	; 0x6ea <timer0_isr+0x7a>
     6c2:	5c 98       	cbi	0x0b, 4	; 11
     6c4:	80 91 4b 01 	lds	r24, 0x014B
     6c8:	90 91 4c 01 	lds	r25, 0x014C
     6cc:	89 2b       	or	r24, r25
     6ce:	51 f0       	breq	.+20     	; 0x6e4 <timer0_isr+0x74>
     6d0:	80 91 4b 01 	lds	r24, 0x014B
     6d4:	90 91 4c 01 	lds	r25, 0x014C
     6d8:	01 97       	sbiw	r24, 0x01	; 1
     6da:	90 93 4c 01 	sts	0x014C, r25
     6de:	80 93 4b 01 	sts	0x014B, r24
     6e2:	03 c0       	rjmp	.+6      	; 0x6ea <timer0_isr+0x7a>
     6e4:	81 e0       	ldi	r24, 0x01	; 1
     6e6:	80 93 47 01 	sts	0x0147, r24
     6ea:	80 91 4b 01 	lds	r24, 0x014B
     6ee:	90 91 4c 01 	lds	r25, 0x014C
     6f2:	90 93 96 01 	sts	0x0196, r25
     6f6:	80 93 95 01 	sts	0x0195, r24
     6fa:	08 95       	ret

000006fc <timer2_isr>:
     6fc:	60 91 d3 01 	lds	r22, 0x01D3
     700:	65 ff       	sbrs	r22, 5
     702:	2a c0       	rjmp	.+84     	; 0x758 <timer2_isr+0x5c>
     704:	80 91 45 01 	lds	r24, 0x0145
     708:	90 91 46 01 	lds	r25, 0x0146
     70c:	01 96       	adiw	r24, 0x01	; 1
     70e:	90 93 46 01 	sts	0x0146, r25
     712:	80 93 45 01 	sts	0x0145, r24
     716:	40 91 9d 01 	lds	r20, 0x019D
     71a:	50 91 9e 01 	lds	r21, 0x019E
     71e:	76 e9       	ldi	r23, 0x96	; 150
     720:	74 9f       	mul	r23, r20
     722:	90 01       	movw	r18, r0
     724:	75 9f       	mul	r23, r21
     726:	30 0d       	add	r19, r0
     728:	11 24       	eor	r1, r1
     72a:	28 17       	cp	r18, r24
     72c:	39 07       	cpc	r19, r25
     72e:	10 f0       	brcs	.+4      	; 0x734 <timer2_isr+0x38>
     730:	62 60       	ori	r22, 0x02	; 2
     732:	0f c0       	rjmp	.+30     	; 0x752 <timer2_isr+0x56>
     734:	20 91 9f 01 	lds	r18, 0x019F
     738:	30 91 a0 01 	lds	r19, 0x01A0
     73c:	24 0f       	add	r18, r20
     73e:	35 1f       	adc	r19, r21
     740:	72 9f       	mul	r23, r18
     742:	a0 01       	movw	r20, r0
     744:	73 9f       	mul	r23, r19
     746:	50 0d       	add	r21, r0
     748:	11 24       	eor	r1, r1
     74a:	48 17       	cp	r20, r24
     74c:	59 07       	cpc	r21, r25
     74e:	20 f0       	brcs	.+8      	; 0x758 <timer2_isr+0x5c>
     750:	6d 7f       	andi	r22, 0xFD	; 253
     752:	60 93 d3 01 	sts	0x01D3, r22
     756:	04 c0       	rjmp	.+8      	; 0x760 <timer2_isr+0x64>
     758:	10 92 46 01 	sts	0x0146, r1
     75c:	10 92 45 01 	sts	0x0145, r1
     760:	60 91 d3 01 	lds	r22, 0x01D3
     764:	64 ff       	sbrs	r22, 4
     766:	2a c0       	rjmp	.+84     	; 0x7bc <timer2_isr+0xc0>
     768:	80 91 43 01 	lds	r24, 0x0143
     76c:	90 91 44 01 	lds	r25, 0x0144
     770:	01 96       	adiw	r24, 0x01	; 1
     772:	90 93 44 01 	sts	0x0144, r25
     776:	80 93 43 01 	sts	0x0143, r24
     77a:	40 91 99 01 	lds	r20, 0x0199
     77e:	50 91 9a 01 	lds	r21, 0x019A
     782:	7b e4       	ldi	r23, 0x4B	; 75
     784:	74 9f       	mul	r23, r20
     786:	90 01       	movw	r18, r0
     788:	75 9f       	mul	r23, r21
     78a:	30 0d       	add	r19, r0
     78c:	11 24       	eor	r1, r1
     78e:	28 17       	cp	r18, r24
     790:	39 07       	cpc	r19, r25
     792:	10 f0       	brcs	.+4      	; 0x798 <timer2_isr+0x9c>
     794:	64 60       	ori	r22, 0x04	; 4
     796:	0f c0       	rjmp	.+30     	; 0x7b6 <timer2_isr+0xba>
     798:	20 91 9b 01 	lds	r18, 0x019B
     79c:	30 91 9c 01 	lds	r19, 0x019C
     7a0:	24 0f       	add	r18, r20
     7a2:	35 1f       	adc	r19, r21
     7a4:	72 9f       	mul	r23, r18
     7a6:	a0 01       	movw	r20, r0
     7a8:	73 9f       	mul	r23, r19
     7aa:	50 0d       	add	r21, r0
     7ac:	11 24       	eor	r1, r1
     7ae:	48 17       	cp	r20, r24
     7b0:	59 07       	cpc	r21, r25
     7b2:	20 f0       	brcs	.+8      	; 0x7bc <timer2_isr+0xc0>
     7b4:	6b 7f       	andi	r22, 0xFB	; 251
     7b6:	60 93 d3 01 	sts	0x01D3, r22
     7ba:	08 95       	ret
     7bc:	10 92 44 01 	sts	0x0144, r1
     7c0:	10 92 43 01 	sts	0x0143, r1
     7c4:	08 95       	ret

000007c6 <timer2_init>:
     7c6:	e0 e7       	ldi	r30, 0x70	; 112
     7c8:	f0 e0       	ldi	r31, 0x00	; 0
     7ca:	80 81       	ld	r24, Z
     7cc:	82 60       	ori	r24, 0x02	; 2
     7ce:	80 83       	st	Z, r24
     7d0:	e0 eb       	ldi	r30, 0xB0	; 176
     7d2:	f0 e0       	ldi	r31, 0x00	; 0
     7d4:	80 81       	ld	r24, Z
     7d6:	82 60       	ori	r24, 0x02	; 2
     7d8:	80 83       	st	Z, r24
     7da:	e1 eb       	ldi	r30, 0xB1	; 177
     7dc:	f0 e0       	ldi	r31, 0x00	; 0
     7de:	80 81       	ld	r24, Z
     7e0:	85 60       	ori	r24, 0x05	; 5
     7e2:	80 83       	st	Z, r24
     7e4:	8f ef       	ldi	r24, 0xFF	; 255
     7e6:	80 93 b3 00 	sts	0x00B3, r24
     7ea:	10 92 b4 00 	sts	0x00B4, r1
     7ee:	08 95       	ret

000007f0 <timer2_enable>:
     7f0:	e0 e7       	ldi	r30, 0x70	; 112
     7f2:	f0 e0       	ldi	r31, 0x00	; 0
     7f4:	80 81       	ld	r24, Z
     7f6:	82 60       	ori	r24, 0x02	; 2
     7f8:	80 83       	st	Z, r24
     7fa:	08 95       	ret

000007fc <timer2_disable>:
     7fc:	e0 e7       	ldi	r30, 0x70	; 112
     7fe:	f0 e0       	ldi	r31, 0x00	; 0
     800:	80 81       	ld	r24, Z
     802:	8d 7f       	andi	r24, 0xFD	; 253
     804:	80 83       	st	Z, r24
     806:	08 95       	ret

00000808 <timer0_enable>:
     808:	83 30       	cpi	r24, 0x03	; 3
     80a:	20 f0       	brcs	.+8      	; 0x814 <timer0_enable+0xc>
     80c:	80 31       	cpi	r24, 0x10	; 16
     80e:	18 f0       	brcs	.+6      	; 0x816 <timer0_enable+0xe>
     810:	8f e0       	ldi	r24, 0x0F	; 15
     812:	01 c0       	rjmp	.+2      	; 0x816 <timer0_enable+0xe>
     814:	83 e0       	ldi	r24, 0x03	; 3
     816:	87 bd       	out	0x27, r24	; 39
     818:	80 91 6e 00 	lds	r24, 0x006E
     81c:	82 60       	ori	r24, 0x02	; 2
     81e:	80 93 6e 00 	sts	0x006E, r24
     822:	08 95       	ret

00000824 <timer0_disable>:
     824:	ee e6       	ldi	r30, 0x6E	; 110
     826:	f0 e0       	ldi	r31, 0x00	; 0
     828:	80 81       	ld	r24, Z
     82a:	8d 7f       	andi	r24, 0xFD	; 253
     82c:	80 83       	st	Z, r24
     82e:	08 95       	ret

00000830 <timer0_comp_init>:
     830:	ee e6       	ldi	r30, 0x6E	; 110
     832:	f0 e0       	ldi	r31, 0x00	; 0
     834:	80 81       	ld	r24, Z
     836:	82 60       	ori	r24, 0x02	; 2
     838:	80 83       	st	Z, r24
     83a:	84 b5       	in	r24, 0x24	; 36
     83c:	82 60       	ori	r24, 0x02	; 2
     83e:	84 bd       	out	0x24, r24	; 36
     840:	85 b5       	in	r24, 0x25	; 37
     842:	85 60       	ori	r24, 0x05	; 5
     844:	85 bd       	out	0x25, r24	; 37
     846:	84 e1       	ldi	r24, 0x14	; 20
     848:	87 bd       	out	0x27, r24	; 39
     84a:	0c 94 12 04 	jmp	0x824	; 0x824 <timer0_disable>

0000084e <__vector_14>:
     84e:	1f 92       	push	r1
     850:	0f 92       	push	r0
     852:	0f b6       	in	r0, 0x3f	; 63
     854:	0f 92       	push	r0
     856:	11 24       	eor	r1, r1
     858:	2f 93       	push	r18
     85a:	3f 93       	push	r19
     85c:	4f 93       	push	r20
     85e:	5f 93       	push	r21
     860:	6f 93       	push	r22
     862:	7f 93       	push	r23
     864:	8f 93       	push	r24
     866:	9f 93       	push	r25
     868:	af 93       	push	r26
     86a:	bf 93       	push	r27
     86c:	ef 93       	push	r30
     86e:	ff 93       	push	r31
     870:	0e 94 38 03 	call	0x670	; 0x670 <timer0_isr>
     874:	ff 91       	pop	r31
     876:	ef 91       	pop	r30
     878:	bf 91       	pop	r27
     87a:	af 91       	pop	r26
     87c:	9f 91       	pop	r25
     87e:	8f 91       	pop	r24
     880:	7f 91       	pop	r23
     882:	6f 91       	pop	r22
     884:	5f 91       	pop	r21
     886:	4f 91       	pop	r20
     888:	3f 91       	pop	r19
     88a:	2f 91       	pop	r18
     88c:	0f 90       	pop	r0
     88e:	0f be       	out	0x3f, r0	; 63
     890:	0f 90       	pop	r0
     892:	1f 90       	pop	r1
     894:	18 95       	reti

00000896 <__vector_7>:
     896:	1f 92       	push	r1
     898:	0f 92       	push	r0
     89a:	0f b6       	in	r0, 0x3f	; 63
     89c:	0f 92       	push	r0
     89e:	11 24       	eor	r1, r1
     8a0:	2f 93       	push	r18
     8a2:	3f 93       	push	r19
     8a4:	4f 93       	push	r20
     8a6:	5f 93       	push	r21
     8a8:	6f 93       	push	r22
     8aa:	7f 93       	push	r23
     8ac:	8f 93       	push	r24
     8ae:	9f 93       	push	r25
     8b0:	af 93       	push	r26
     8b2:	bf 93       	push	r27
     8b4:	ef 93       	push	r30
     8b6:	ff 93       	push	r31
     8b8:	0e 94 7e 03 	call	0x6fc	; 0x6fc <timer2_isr>
     8bc:	ff 91       	pop	r31
     8be:	ef 91       	pop	r30
     8c0:	bf 91       	pop	r27
     8c2:	af 91       	pop	r26
     8c4:	9f 91       	pop	r25
     8c6:	8f 91       	pop	r24
     8c8:	7f 91       	pop	r23
     8ca:	6f 91       	pop	r22
     8cc:	5f 91       	pop	r21
     8ce:	4f 91       	pop	r20
     8d0:	3f 91       	pop	r19
     8d2:	2f 91       	pop	r18
     8d4:	0f 90       	pop	r0
     8d6:	0f be       	out	0x3f, r0	; 63
     8d8:	0f 90       	pop	r0
     8da:	1f 90       	pop	r1
     8dc:	18 95       	reti

000008de <PCINT_init>:
     8de:	84 b1       	in	r24, 0x04	; 4
     8e0:	8c 7f       	andi	r24, 0xFC	; 252
     8e2:	84 b9       	out	0x04, r24	; 4
     8e4:	e8 e6       	ldi	r30, 0x68	; 104
     8e6:	f0 e0       	ldi	r31, 0x00	; 0
     8e8:	80 81       	ld	r24, Z
     8ea:	81 60       	ori	r24, 0x01	; 1
     8ec:	80 83       	st	Z, r24
     8ee:	eb e6       	ldi	r30, 0x6B	; 107
     8f0:	f0 e0       	ldi	r31, 0x00	; 0
     8f2:	80 81       	ld	r24, Z
     8f4:	83 60       	ori	r24, 0x03	; 3
     8f6:	80 83       	st	Z, r24
     8f8:	78 94       	sei
     8fa:	08 95       	ret

000008fc <__vector_3>:
     8fc:	1f 92       	push	r1
     8fe:	0f 92       	push	r0
     900:	0f b6       	in	r0, 0x3f	; 63
     902:	0f 92       	push	r0
     904:	11 24       	eor	r1, r1
     906:	0f 93       	push	r16
     908:	1f 93       	push	r17
     90a:	2f 93       	push	r18
     90c:	3f 93       	push	r19
     90e:	4f 93       	push	r20
     910:	5f 93       	push	r21
     912:	6f 93       	push	r22
     914:	7f 93       	push	r23
     916:	8f 93       	push	r24
     918:	9f 93       	push	r25
     91a:	af 93       	push	r26
     91c:	bf 93       	push	r27
     91e:	cf 93       	push	r28
     920:	df 93       	push	r29
     922:	ef 93       	push	r30
     924:	ff 93       	push	r31
     926:	f8 94       	cli
     928:	18 99       	sbic	0x03, 0	; 3
     92a:	1d c0       	rjmp	.+58     	; 0x966 <__vector_3+0x6a>
     92c:	f9 99       	sbic	0x1f, 1	; 31
     92e:	fe cf       	rjmp	.-4      	; 0x92c <__vector_3+0x30>
     930:	6e ee       	ldi	r22, 0xEE	; 238
     932:	80 e1       	ldi	r24, 0x10	; 16
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	0e 94 3e 0c 	call	0x187c	; 0x187c <__eewr_byte_m168p>
     93a:	60 91 d3 01 	lds	r22, 0x01D3
     93e:	81 e1       	ldi	r24, 0x11	; 17
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	0e 94 3e 0c 	call	0x187c	; 0x187c <__eewr_byte_m168p>
     946:	03 e9       	ldi	r16, 0x93	; 147
     948:	11 e0       	ldi	r17, 0x01	; 1
     94a:	c2 e1       	ldi	r28, 0x12	; 18
     94c:	d0 e0       	ldi	r29, 0x00	; 0
     94e:	f8 01       	movw	r30, r16
     950:	61 91       	ld	r22, Z+
     952:	71 91       	ld	r23, Z+
     954:	8f 01       	movw	r16, r30
     956:	ce 01       	movw	r24, r28
     958:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__eewr_word_m168p>
     95c:	22 96       	adiw	r28, 0x02	; 2
     95e:	c2 32       	cpi	r28, 0x22	; 34
     960:	d1 05       	cpc	r29, r1
     962:	a9 f7       	brne	.-22     	; 0x94e <__vector_3+0x52>
     964:	06 c0       	rjmp	.+12     	; 0x972 <__vector_3+0x76>
     966:	19 99       	sbic	0x03, 1	; 3
     968:	04 c0       	rjmp	.+8      	; 0x972 <__vector_3+0x76>
     96a:	80 e0       	ldi	r24, 0x00	; 0
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	0e 94 9f 02 	call	0x53e	; 0x53e <SERVO_calib>
     972:	78 94       	sei
     974:	ff 91       	pop	r31
     976:	ef 91       	pop	r30
     978:	df 91       	pop	r29
     97a:	cf 91       	pop	r28
     97c:	bf 91       	pop	r27
     97e:	af 91       	pop	r26
     980:	9f 91       	pop	r25
     982:	8f 91       	pop	r24
     984:	7f 91       	pop	r23
     986:	6f 91       	pop	r22
     988:	5f 91       	pop	r21
     98a:	4f 91       	pop	r20
     98c:	3f 91       	pop	r19
     98e:	2f 91       	pop	r18
     990:	1f 91       	pop	r17
     992:	0f 91       	pop	r16
     994:	0f 90       	pop	r0
     996:	0f be       	out	0x3f, r0	; 63
     998:	0f 90       	pop	r0
     99a:	1f 90       	pop	r1
     99c:	18 95       	reti

0000099e <eMBInit>:
     99e:	ef 92       	push	r14
     9a0:	0f 93       	push	r16
     9a2:	1f 93       	push	r17
     9a4:	cf 93       	push	r28
     9a6:	98 2f       	mov	r25, r24
     9a8:	86 2f       	mov	r24, r22
     9aa:	64 2f       	mov	r22, r20
     9ac:	a9 01       	movw	r20, r18
     9ae:	98 01       	movw	r18, r16
     9b0:	0e 2d       	mov	r16, r14
     9b2:	7f ef       	ldi	r23, 0xFF	; 255
     9b4:	78 0f       	add	r23, r24
     9b6:	77 3f       	cpi	r23, 0xF7	; 247
     9b8:	08 f0       	brcs	.+2      	; 0x9bc <eMBInit+0x1e>
     9ba:	41 c0       	rjmp	.+130    	; 0xa3e <eMBInit+0xa0>
     9bc:	80 93 64 01 	sts	0x0164, r24
     9c0:	91 11       	cpse	r25, r1
     9c2:	3d c0       	rjmp	.+122    	; 0xa3e <eMBInit+0xa0>
     9c4:	ef e6       	ldi	r30, 0x6F	; 111
     9c6:	f6 e0       	ldi	r31, 0x06	; 6
     9c8:	f0 93 60 01 	sts	0x0160, r31
     9cc:	e0 93 5f 01 	sts	0x015F, r30
     9d0:	ea e7       	ldi	r30, 0x7A	; 122
     9d2:	f6 e0       	ldi	r31, 0x06	; 6
     9d4:	f0 93 5e 01 	sts	0x015E, r31
     9d8:	e0 93 5d 01 	sts	0x015D, r30
     9dc:	e8 eb       	ldi	r30, 0xB8	; 184
     9de:	f6 e0       	ldi	r31, 0x06	; 6
     9e0:	f0 93 62 01 	sts	0x0162, r31
     9e4:	e0 93 61 01 	sts	0x0161, r30
     9e8:	e3 e8       	ldi	r30, 0x83	; 131
     9ea:	f6 e0       	ldi	r31, 0x06	; 6
     9ec:	f0 93 5c 01 	sts	0x015C, r31
     9f0:	e0 93 5b 01 	sts	0x015B, r30
     9f4:	10 92 5a 01 	sts	0x015A, r1
     9f8:	10 92 59 01 	sts	0x0159, r1
     9fc:	e8 e0       	ldi	r30, 0x08	; 8
     9fe:	f7 e0       	ldi	r31, 0x07	; 7
     a00:	f0 93 e8 01 	sts	0x01E8, r31
     a04:	e0 93 e7 01 	sts	0x01E7, r30
     a08:	e4 e5       	ldi	r30, 0x54	; 84
     a0a:	f7 e0       	ldi	r31, 0x07	; 7
     a0c:	f0 93 e4 01 	sts	0x01E4, r31
     a10:	e0 93 e3 01 	sts	0x01E3, r30
     a14:	e0 e9       	ldi	r30, 0x90	; 144
     a16:	f7 e0       	ldi	r31, 0x07	; 7
     a18:	f0 93 e6 01 	sts	0x01E6, r31
     a1c:	e0 93 e5 01 	sts	0x01E5, r30
     a20:	0e 94 38 06 	call	0xc70	; 0xc70 <eMBRTUInit>
     a24:	c8 2f       	mov	r28, r24
     a26:	81 11       	cpse	r24, r1
     a28:	0d c0       	rjmp	.+26     	; 0xa44 <eMBInit+0xa6>
     a2a:	0e 94 3c 0b 	call	0x1678	; 0x1678 <xMBPortEventInit>
     a2e:	88 23       	and	r24, r24
     a30:	41 f0       	breq	.+16     	; 0xa42 <eMBInit+0xa4>
     a32:	10 92 63 01 	sts	0x0163, r1
     a36:	81 e0       	ldi	r24, 0x01	; 1
     a38:	80 93 31 01 	sts	0x0131, r24
     a3c:	03 c0       	rjmp	.+6      	; 0xa44 <eMBInit+0xa6>
     a3e:	c2 e0       	ldi	r28, 0x02	; 2
     a40:	01 c0       	rjmp	.+2      	; 0xa44 <eMBInit+0xa6>
     a42:	c3 e0       	ldi	r28, 0x03	; 3
     a44:	8c 2f       	mov	r24, r28
     a46:	cf 91       	pop	r28
     a48:	1f 91       	pop	r17
     a4a:	0f 91       	pop	r16
     a4c:	ef 90       	pop	r14
     a4e:	08 95       	ret

00000a50 <eMBRegisterCB>:
     a50:	18 16       	cp	r1, r24
     a52:	0c f0       	brlt	.+2      	; 0xa56 <eMBRegisterCB+0x6>
     a54:	42 c0       	rjmp	.+132    	; 0xada <eMBRegisterCB+0x8a>
     a56:	f8 94       	cli
     a58:	61 15       	cp	r22, r1
     a5a:	71 05       	cpc	r23, r1
     a5c:	11 f1       	breq	.+68     	; 0xaa2 <eMBRegisterCB+0x52>
     a5e:	e2 e0       	ldi	r30, 0x02	; 2
     a60:	f1 e0       	ldi	r31, 0x01	; 1
     a62:	20 e0       	ldi	r18, 0x00	; 0
     a64:	30 e0       	ldi	r19, 0x00	; 0
     a66:	40 81       	ld	r20, Z
     a68:	51 81       	ldd	r21, Z+1	; 0x01
     a6a:	41 15       	cp	r20, r1
     a6c:	51 05       	cpc	r21, r1
     a6e:	71 f4       	brne	.+28     	; 0xa8c <eMBRegisterCB+0x3c>
     a70:	f9 01       	movw	r30, r18
     a72:	ee 0f       	add	r30, r30
     a74:	ff 1f       	adc	r31, r31
     a76:	e2 0f       	add	r30, r18
     a78:	f3 1f       	adc	r31, r19
     a7a:	ef 5f       	subi	r30, 0xFF	; 255
     a7c:	fe 4f       	sbci	r31, 0xFE	; 254
     a7e:	80 83       	st	Z, r24
     a80:	72 83       	std	Z+2, r23	; 0x02
     a82:	61 83       	std	Z+1, r22	; 0x01
     a84:	20 31       	cpi	r18, 0x10	; 16
     a86:	31 05       	cpc	r19, r1
     a88:	e9 f4       	brne	.+58     	; 0xac4 <eMBRegisterCB+0x74>
     a8a:	09 c0       	rjmp	.+18     	; 0xa9e <eMBRegisterCB+0x4e>
     a8c:	46 17       	cp	r20, r22
     a8e:	57 07       	cpc	r21, r23
     a90:	79 f3       	breq	.-34     	; 0xa70 <eMBRegisterCB+0x20>
     a92:	2f 5f       	subi	r18, 0xFF	; 255
     a94:	3f 4f       	sbci	r19, 0xFF	; 255
     a96:	33 96       	adiw	r30, 0x03	; 3
     a98:	20 31       	cpi	r18, 0x10	; 16
     a9a:	31 05       	cpc	r19, r1
     a9c:	21 f7       	brne	.-56     	; 0xa66 <eMBRegisterCB+0x16>
     a9e:	84 e0       	ldi	r24, 0x04	; 4
     aa0:	1a c0       	rjmp	.+52     	; 0xad6 <eMBRegisterCB+0x86>
     aa2:	e1 e0       	ldi	r30, 0x01	; 1
     aa4:	f1 e0       	ldi	r31, 0x01	; 1
     aa6:	20 e0       	ldi	r18, 0x00	; 0
     aa8:	30 e0       	ldi	r19, 0x00	; 0
     aaa:	90 81       	ld	r25, Z
     aac:	98 13       	cpse	r25, r24
     aae:	0c c0       	rjmp	.+24     	; 0xac8 <eMBRegisterCB+0x78>
     ab0:	f9 01       	movw	r30, r18
     ab2:	ee 0f       	add	r30, r30
     ab4:	ff 1f       	adc	r31, r31
     ab6:	e2 0f       	add	r30, r18
     ab8:	f3 1f       	adc	r31, r19
     aba:	ef 5f       	subi	r30, 0xFF	; 255
     abc:	fe 4f       	sbci	r31, 0xFE	; 254
     abe:	10 82       	st	Z, r1
     ac0:	12 82       	std	Z+2, r1	; 0x02
     ac2:	11 82       	std	Z+1, r1	; 0x01
     ac4:	80 e0       	ldi	r24, 0x00	; 0
     ac6:	07 c0       	rjmp	.+14     	; 0xad6 <eMBRegisterCB+0x86>
     ac8:	2f 5f       	subi	r18, 0xFF	; 255
     aca:	3f 4f       	sbci	r19, 0xFF	; 255
     acc:	33 96       	adiw	r30, 0x03	; 3
     ace:	20 31       	cpi	r18, 0x10	; 16
     ad0:	31 05       	cpc	r19, r1
     ad2:	59 f7       	brne	.-42     	; 0xaaa <eMBRegisterCB+0x5a>
     ad4:	f7 cf       	rjmp	.-18     	; 0xac4 <eMBRegisterCB+0x74>
     ad6:	78 94       	sei
     ad8:	08 95       	ret
     ada:	82 e0       	ldi	r24, 0x02	; 2
     adc:	08 95       	ret

00000ade <eMBClose>:
     ade:	80 91 31 01 	lds	r24, 0x0131
     ae2:	81 30       	cpi	r24, 0x01	; 1
     ae4:	41 f4       	brne	.+16     	; 0xaf6 <eMBClose+0x18>
     ae6:	e0 91 59 01 	lds	r30, 0x0159
     aea:	f0 91 5a 01 	lds	r31, 0x015A
     aee:	30 97       	sbiw	r30, 0x00	; 0
     af0:	21 f0       	breq	.+8      	; 0xafa <eMBClose+0x1c>
     af2:	09 95       	icall
     af4:	02 c0       	rjmp	.+4      	; 0xafa <eMBClose+0x1c>
     af6:	86 e0       	ldi	r24, 0x06	; 6
     af8:	08 95       	ret
     afa:	80 e0       	ldi	r24, 0x00	; 0
     afc:	08 95       	ret

00000afe <eMBEnable>:
     afe:	80 91 31 01 	lds	r24, 0x0131
     b02:	81 30       	cpi	r24, 0x01	; 1
     b04:	49 f4       	brne	.+18     	; 0xb18 <eMBEnable+0x1a>
     b06:	e0 91 5f 01 	lds	r30, 0x015F
     b0a:	f0 91 60 01 	lds	r31, 0x0160
     b0e:	09 95       	icall
     b10:	10 92 31 01 	sts	0x0131, r1
     b14:	80 e0       	ldi	r24, 0x00	; 0
     b16:	08 95       	ret
     b18:	86 e0       	ldi	r24, 0x06	; 6
     b1a:	08 95       	ret

00000b1c <eMBDisable>:
     b1c:	80 91 31 01 	lds	r24, 0x0131
     b20:	81 11       	cpse	r24, r1
     b22:	09 c0       	rjmp	.+18     	; 0xb36 <eMBDisable+0x1a>
     b24:	e0 91 5d 01 	lds	r30, 0x015D
     b28:	f0 91 5e 01 	lds	r31, 0x015E
     b2c:	09 95       	icall
     b2e:	81 e0       	ldi	r24, 0x01	; 1
     b30:	80 93 31 01 	sts	0x0131, r24
     b34:	02 c0       	rjmp	.+4      	; 0xb3a <eMBDisable+0x1e>
     b36:	81 30       	cpi	r24, 0x01	; 1
     b38:	11 f4       	brne	.+4      	; 0xb3e <eMBDisable+0x22>
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	08 95       	ret
     b3e:	86 e0       	ldi	r24, 0x06	; 6
     b40:	08 95       	ret

00000b42 <eMBPoll>:
     b42:	cf 93       	push	r28
     b44:	df 93       	push	r29
     b46:	1f 92       	push	r1
     b48:	cd b7       	in	r28, 0x3d	; 61
     b4a:	de b7       	in	r29, 0x3e	; 62
     b4c:	80 91 31 01 	lds	r24, 0x0131
     b50:	81 11       	cpse	r24, r1
     b52:	87 c0       	rjmp	.+270    	; 0xc62 <eMBPoll+0x120>
     b54:	ce 01       	movw	r24, r28
     b56:	01 96       	adiw	r24, 0x01	; 1
     b58:	0e 94 47 0b 	call	0x168e	; 0x168e <xMBPortEventGet>
     b5c:	81 30       	cpi	r24, 0x01	; 1
     b5e:	09 f0       	breq	.+2      	; 0xb62 <eMBPoll+0x20>
     b60:	82 c0       	rjmp	.+260    	; 0xc66 <eMBPoll+0x124>
     b62:	99 81       	ldd	r25, Y+1	; 0x01
     b64:	91 30       	cpi	r25, 0x01	; 1
     b66:	89 f0       	breq	.+34     	; 0xb8a <eMBPoll+0x48>
     b68:	92 30       	cpi	r25, 0x02	; 2
     b6a:	09 f0       	breq	.+2      	; 0xb6e <eMBPoll+0x2c>
     b6c:	7c c0       	rjmp	.+248    	; 0xc66 <eMBPoll+0x124>
     b6e:	a0 91 56 01 	lds	r26, 0x0156
     b72:	b0 91 57 01 	lds	r27, 0x0157
     b76:	9c 91       	ld	r25, X
     b78:	90 93 53 01 	sts	0x0153, r25
     b7c:	80 93 52 01 	sts	0x0152, r24
     b80:	e1 e0       	ldi	r30, 0x01	; 1
     b82:	f1 e0       	ldi	r31, 0x01	; 1
     b84:	20 e0       	ldi	r18, 0x00	; 0
     b86:	30 e0       	ldi	r19, 0x00	; 0
     b88:	1f c0       	rjmp	.+62     	; 0xbc8 <eMBPoll+0x86>
     b8a:	e0 91 5b 01 	lds	r30, 0x015B
     b8e:	f0 91 5c 01 	lds	r31, 0x015C
     b92:	44 e5       	ldi	r20, 0x54	; 84
     b94:	51 e0       	ldi	r21, 0x01	; 1
     b96:	66 e5       	ldi	r22, 0x56	; 86
     b98:	71 e0       	ldi	r23, 0x01	; 1
     b9a:	88 e5       	ldi	r24, 0x58	; 88
     b9c:	91 e0       	ldi	r25, 0x01	; 1
     b9e:	09 95       	icall
     ba0:	81 11       	cpse	r24, r1
     ba2:	61 c0       	rjmp	.+194    	; 0xc66 <eMBPoll+0x124>
     ba4:	80 91 58 01 	lds	r24, 0x0158
     ba8:	90 91 64 01 	lds	r25, 0x0164
     bac:	89 17       	cp	r24, r25
     bae:	11 f0       	breq	.+4      	; 0xbb4 <eMBPoll+0x72>
     bb0:	81 11       	cpse	r24, r1
     bb2:	59 c0       	rjmp	.+178    	; 0xc66 <eMBPoll+0x124>
     bb4:	82 e0       	ldi	r24, 0x02	; 2
     bb6:	0e 94 40 0b 	call	0x1680	; 0x1680 <xMBPortEventPost>
     bba:	55 c0       	rjmp	.+170    	; 0xc66 <eMBPoll+0x124>
     bbc:	2f 5f       	subi	r18, 0xFF	; 255
     bbe:	3f 4f       	sbci	r19, 0xFF	; 255
     bc0:	33 96       	adiw	r30, 0x03	; 3
     bc2:	20 31       	cpi	r18, 0x10	; 16
     bc4:	31 05       	cpc	r19, r1
     bc6:	a9 f0       	breq	.+42     	; 0xbf2 <eMBPoll+0xb0>
     bc8:	80 81       	ld	r24, Z
     bca:	88 23       	and	r24, r24
     bcc:	91 f0       	breq	.+36     	; 0xbf2 <eMBPoll+0xb0>
     bce:	89 13       	cpse	r24, r25
     bd0:	f5 cf       	rjmp	.-22     	; 0xbbc <eMBPoll+0x7a>
     bd2:	f9 01       	movw	r30, r18
     bd4:	ee 0f       	add	r30, r30
     bd6:	ff 1f       	adc	r31, r31
     bd8:	e2 0f       	add	r30, r18
     bda:	f3 1f       	adc	r31, r19
     bdc:	ef 5f       	subi	r30, 0xFF	; 255
     bde:	fe 4f       	sbci	r31, 0xFE	; 254
     be0:	01 80       	ldd	r0, Z+1	; 0x01
     be2:	f2 81       	ldd	r31, Z+2	; 0x02
     be4:	e0 2d       	mov	r30, r0
     be6:	64 e5       	ldi	r22, 0x54	; 84
     be8:	71 e0       	ldi	r23, 0x01	; 1
     bea:	cd 01       	movw	r24, r26
     bec:	09 95       	icall
     bee:	80 93 52 01 	sts	0x0152, r24
     bf2:	80 91 58 01 	lds	r24, 0x0158
     bf6:	88 23       	and	r24, r24
     bf8:	b1 f1       	breq	.+108    	; 0xc66 <eMBPoll+0x124>
     bfa:	40 91 52 01 	lds	r20, 0x0152
     bfe:	44 23       	and	r20, r20
     c00:	01 f1       	breq	.+64     	; 0xc42 <eMBPoll+0x100>
     c02:	e0 91 56 01 	lds	r30, 0x0156
     c06:	f0 91 57 01 	lds	r31, 0x0157
     c0a:	81 e0       	ldi	r24, 0x01	; 1
     c0c:	90 e0       	ldi	r25, 0x00	; 0
     c0e:	90 93 55 01 	sts	0x0155, r25
     c12:	80 93 54 01 	sts	0x0154, r24
     c16:	80 91 53 01 	lds	r24, 0x0153
     c1a:	80 68       	ori	r24, 0x80	; 128
     c1c:	80 83       	st	Z, r24
     c1e:	e0 91 56 01 	lds	r30, 0x0156
     c22:	f0 91 57 01 	lds	r31, 0x0157
     c26:	80 91 54 01 	lds	r24, 0x0154
     c2a:	90 91 55 01 	lds	r25, 0x0155
     c2e:	9c 01       	movw	r18, r24
     c30:	2f 5f       	subi	r18, 0xFF	; 255
     c32:	3f 4f       	sbci	r19, 0xFF	; 255
     c34:	30 93 55 01 	sts	0x0155, r19
     c38:	20 93 54 01 	sts	0x0154, r18
     c3c:	e8 0f       	add	r30, r24
     c3e:	f9 1f       	adc	r31, r25
     c40:	40 83       	st	Z, r20
     c42:	40 91 54 01 	lds	r20, 0x0154
     c46:	50 91 55 01 	lds	r21, 0x0155
     c4a:	60 91 56 01 	lds	r22, 0x0156
     c4e:	70 91 57 01 	lds	r23, 0x0157
     c52:	e0 91 61 01 	lds	r30, 0x0161
     c56:	f0 91 62 01 	lds	r31, 0x0162
     c5a:	80 91 64 01 	lds	r24, 0x0164
     c5e:	09 95       	icall
     c60:	02 c0       	rjmp	.+4      	; 0xc66 <eMBPoll+0x124>
     c62:	86 e0       	ldi	r24, 0x06	; 6
     c64:	01 c0       	rjmp	.+2      	; 0xc68 <eMBPoll+0x126>
     c66:	80 e0       	ldi	r24, 0x00	; 0
     c68:	0f 90       	pop	r0
     c6a:	df 91       	pop	r29
     c6c:	cf 91       	pop	r28
     c6e:	08 95       	ret

00000c70 <eMBRTUInit>:
     c70:	cf 92       	push	r12
     c72:	df 92       	push	r13
     c74:	ef 92       	push	r14
     c76:	ff 92       	push	r15
     c78:	0f 93       	push	r16
     c7a:	86 2f       	mov	r24, r22
     c7c:	69 01       	movw	r12, r18
     c7e:	7a 01       	movw	r14, r20
     c80:	f8 94       	cli
     c82:	28 e0       	ldi	r18, 0x08	; 8
     c84:	b7 01       	movw	r22, r14
     c86:	a6 01       	movw	r20, r12
     c88:	0e 94 98 0a 	call	0x1530	; 0x1530 <xMBPortSerialInit>
     c8c:	81 30       	cpi	r24, 0x01	; 1
     c8e:	f9 f4       	brne	.+62     	; 0xcce <eMBRTUInit+0x5e>
     c90:	81 e0       	ldi	r24, 0x01	; 1
     c92:	c8 16       	cp	r12, r24
     c94:	8b e4       	ldi	r24, 0x4B	; 75
     c96:	d8 06       	cpc	r13, r24
     c98:	e1 04       	cpc	r14, r1
     c9a:	f1 04       	cpc	r15, r1
     c9c:	68 f4       	brcc	.+26     	; 0xcb8 <eMBRTUInit+0x48>
     c9e:	a7 01       	movw	r20, r14
     ca0:	96 01       	movw	r18, r12
     ca2:	22 0f       	add	r18, r18
     ca4:	33 1f       	adc	r19, r19
     ca6:	44 1f       	adc	r20, r20
     ca8:	55 1f       	adc	r21, r21
     caa:	60 ea       	ldi	r22, 0xA0	; 160
     cac:	7f e7       	ldi	r23, 0x7F	; 127
     cae:	87 e1       	ldi	r24, 0x17	; 23
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <__udivmodsi4>
     cb6:	04 c0       	rjmp	.+8      	; 0xcc0 <eMBRTUInit+0x50>
     cb8:	23 e2       	ldi	r18, 0x23	; 35
     cba:	30 e0       	ldi	r19, 0x00	; 0
     cbc:	40 e0       	ldi	r20, 0x00	; 0
     cbe:	50 e0       	ldi	r21, 0x00	; 0
     cc0:	c9 01       	movw	r24, r18
     cc2:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <xMBPortTimersInit>
     cc6:	81 30       	cpi	r24, 0x01	; 1
     cc8:	11 f4       	brne	.+4      	; 0xcce <eMBRTUInit+0x5e>
     cca:	80 e0       	ldi	r24, 0x00	; 0
     ccc:	01 c0       	rjmp	.+2      	; 0xcd0 <eMBRTUInit+0x60>
     cce:	83 e0       	ldi	r24, 0x03	; 3
     cd0:	78 94       	sei
     cd2:	0f 91       	pop	r16
     cd4:	ff 90       	pop	r15
     cd6:	ef 90       	pop	r14
     cd8:	df 90       	pop	r13
     cda:	cf 90       	pop	r12
     cdc:	08 95       	ret

00000cde <eMBRTUStart>:
     cde:	f8 94       	cli
     ce0:	10 92 6b 01 	sts	0x016B, r1
     ce4:	60 e0       	ldi	r22, 0x00	; 0
     ce6:	81 e0       	ldi	r24, 0x01	; 1
     ce8:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <vMBPortSerialEnable>
     cec:	0e 94 55 0b 	call	0x16aa	; 0x16aa <vMBPortTimersEnable>
     cf0:	78 94       	sei
     cf2:	08 95       	ret

00000cf4 <eMBRTUStop>:
     cf4:	f8 94       	cli
     cf6:	60 e0       	ldi	r22, 0x00	; 0
     cf8:	80 e0       	ldi	r24, 0x00	; 0
     cfa:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <vMBPortSerialEnable>
     cfe:	0e 94 72 0b 	call	0x16e4	; 0x16e4 <vMBPortTimersDisable>
     d02:	78 94       	sei
     d04:	08 95       	ret

00000d06 <eMBRTUReceive>:
     d06:	ef 92       	push	r14
     d08:	ff 92       	push	r15
     d0a:	0f 93       	push	r16
     d0c:	1f 93       	push	r17
     d0e:	cf 93       	push	r28
     d10:	df 93       	push	r29
     d12:	8c 01       	movw	r16, r24
     d14:	eb 01       	movw	r28, r22
     d16:	7a 01       	movw	r14, r20
     d18:	f8 94       	cli
     d1a:	80 91 65 01 	lds	r24, 0x0165
     d1e:	90 91 66 01 	lds	r25, 0x0166
     d22:	04 97       	sbiw	r24, 0x04	; 4
     d24:	10 f4       	brcc	.+4      	; 0xd2a <eMBRTUReceive+0x24>
     d26:	85 e0       	ldi	r24, 0x05	; 5
     d28:	1b c0       	rjmp	.+54     	; 0xd60 <eMBRTUReceive+0x5a>
     d2a:	60 91 65 01 	lds	r22, 0x0165
     d2e:	70 91 66 01 	lds	r23, 0x0166
     d32:	8d ee       	ldi	r24, 0xED	; 237
     d34:	91 e0       	ldi	r25, 0x01	; 1
     d36:	0e 94 be 0b 	call	0x177c	; 0x177c <usMBCRC16>
     d3a:	89 2b       	or	r24, r25
     d3c:	a1 f7       	brne	.-24     	; 0xd26 <eMBRTUReceive+0x20>
     d3e:	80 91 ed 01 	lds	r24, 0x01ED
     d42:	f8 01       	movw	r30, r16
     d44:	80 83       	st	Z, r24
     d46:	80 91 65 01 	lds	r24, 0x0165
     d4a:	90 91 66 01 	lds	r25, 0x0166
     d4e:	03 97       	sbiw	r24, 0x03	; 3
     d50:	f7 01       	movw	r30, r14
     d52:	91 83       	std	Z+1, r25	; 0x01
     d54:	80 83       	st	Z, r24
     d56:	8e ee       	ldi	r24, 0xEE	; 238
     d58:	91 e0       	ldi	r25, 0x01	; 1
     d5a:	99 83       	std	Y+1, r25	; 0x01
     d5c:	88 83       	st	Y, r24
     d5e:	80 e0       	ldi	r24, 0x00	; 0
     d60:	78 94       	sei
     d62:	df 91       	pop	r29
     d64:	cf 91       	pop	r28
     d66:	1f 91       	pop	r17
     d68:	0f 91       	pop	r16
     d6a:	ff 90       	pop	r15
     d6c:	ef 90       	pop	r14
     d6e:	08 95       	ret

00000d70 <eMBRTUSend>:
     d70:	cf 93       	push	r28
     d72:	f8 94       	cli
     d74:	c0 91 6b 01 	lds	r28, 0x016B
     d78:	c1 30       	cpi	r28, 0x01	; 1
     d7a:	09 f0       	breq	.+2      	; 0xd7e <eMBRTUSend+0xe>
     d7c:	45 c0       	rjmp	.+138    	; 0xe08 <eMBRTUSend+0x98>
     d7e:	fb 01       	movw	r30, r22
     d80:	31 97       	sbiw	r30, 0x01	; 1
     d82:	f0 93 6a 01 	sts	0x016A, r31
     d86:	e0 93 69 01 	sts	0x0169, r30
     d8a:	21 e0       	ldi	r18, 0x01	; 1
     d8c:	30 e0       	ldi	r19, 0x00	; 0
     d8e:	30 93 68 01 	sts	0x0168, r19
     d92:	20 93 67 01 	sts	0x0167, r18
     d96:	80 83       	st	Z, r24
     d98:	80 91 67 01 	lds	r24, 0x0167
     d9c:	90 91 68 01 	lds	r25, 0x0168
     da0:	84 0f       	add	r24, r20
     da2:	95 1f       	adc	r25, r21
     da4:	90 93 68 01 	sts	0x0168, r25
     da8:	80 93 67 01 	sts	0x0167, r24
     dac:	60 91 67 01 	lds	r22, 0x0167
     db0:	70 91 68 01 	lds	r23, 0x0168
     db4:	cf 01       	movw	r24, r30
     db6:	0e 94 be 0b 	call	0x177c	; 0x177c <usMBCRC16>
     dba:	69 2f       	mov	r22, r25
     dbc:	20 91 67 01 	lds	r18, 0x0167
     dc0:	30 91 68 01 	lds	r19, 0x0168
     dc4:	a9 01       	movw	r20, r18
     dc6:	4f 5f       	subi	r20, 0xFF	; 255
     dc8:	5f 4f       	sbci	r21, 0xFF	; 255
     dca:	50 93 68 01 	sts	0x0168, r21
     dce:	40 93 67 01 	sts	0x0167, r20
     dd2:	f9 01       	movw	r30, r18
     dd4:	e3 51       	subi	r30, 0x13	; 19
     dd6:	fe 4f       	sbci	r31, 0xFE	; 254
     dd8:	80 83       	st	Z, r24
     dda:	80 91 67 01 	lds	r24, 0x0167
     dde:	90 91 68 01 	lds	r25, 0x0168
     de2:	9c 01       	movw	r18, r24
     de4:	2f 5f       	subi	r18, 0xFF	; 255
     de6:	3f 4f       	sbci	r19, 0xFF	; 255
     de8:	30 93 68 01 	sts	0x0168, r19
     dec:	20 93 67 01 	sts	0x0167, r18
     df0:	fc 01       	movw	r30, r24
     df2:	e3 51       	subi	r30, 0x13	; 19
     df4:	fe 4f       	sbci	r31, 0xFE	; 254
     df6:	60 83       	st	Z, r22
     df8:	c0 93 6c 01 	sts	0x016C, r28
     dfc:	61 e0       	ldi	r22, 0x01	; 1
     dfe:	80 e0       	ldi	r24, 0x00	; 0
     e00:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <vMBPortSerialEnable>
     e04:	80 e0       	ldi	r24, 0x00	; 0
     e06:	01 c0       	rjmp	.+2      	; 0xe0a <eMBRTUSend+0x9a>
     e08:	85 e0       	ldi	r24, 0x05	; 5
     e0a:	78 94       	sei
     e0c:	cf 91       	pop	r28
     e0e:	08 95       	ret

00000e10 <xMBRTUReceiveFSM>:
     e10:	cf 93       	push	r28
     e12:	df 93       	push	r29
     e14:	1f 92       	push	r1
     e16:	cd b7       	in	r28, 0x3d	; 61
     e18:	de b7       	in	r29, 0x3e	; 62
     e1a:	ce 01       	movw	r24, r28
     e1c:	01 96       	adiw	r24, 0x01	; 1
     e1e:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <xMBPortSerialGetByte>
     e22:	80 91 6b 01 	lds	r24, 0x016B
     e26:	81 30       	cpi	r24, 0x01	; 1
     e28:	31 f0       	breq	.+12     	; 0xe36 <xMBRTUReceiveFSM+0x26>
     e2a:	b8 f1       	brcs	.+110    	; 0xe9a <xMBRTUReceiveFSM+0x8a>
     e2c:	82 30       	cpi	r24, 0x02	; 2
     e2e:	c9 f0       	breq	.+50     	; 0xe62 <xMBRTUReceiveFSM+0x52>
     e30:	83 30       	cpi	r24, 0x03	; 3
     e32:	99 f1       	breq	.+102    	; 0xe9a <xMBRTUReceiveFSM+0x8a>
     e34:	34 c0       	rjmp	.+104    	; 0xe9e <xMBRTUReceiveFSM+0x8e>
     e36:	10 92 66 01 	sts	0x0166, r1
     e3a:	10 92 65 01 	sts	0x0165, r1
     e3e:	80 91 65 01 	lds	r24, 0x0165
     e42:	90 91 66 01 	lds	r25, 0x0166
     e46:	9c 01       	movw	r18, r24
     e48:	2f 5f       	subi	r18, 0xFF	; 255
     e4a:	3f 4f       	sbci	r19, 0xFF	; 255
     e4c:	30 93 66 01 	sts	0x0166, r19
     e50:	20 93 65 01 	sts	0x0165, r18
     e54:	29 81       	ldd	r18, Y+1	; 0x01
     e56:	fc 01       	movw	r30, r24
     e58:	e3 51       	subi	r30, 0x13	; 19
     e5a:	fe 4f       	sbci	r31, 0xFE	; 254
     e5c:	20 83       	st	Z, r18
     e5e:	82 e0       	ldi	r24, 0x02	; 2
     e60:	1a c0       	rjmp	.+52     	; 0xe96 <xMBRTUReceiveFSM+0x86>
     e62:	80 91 65 01 	lds	r24, 0x0165
     e66:	90 91 66 01 	lds	r25, 0x0166
     e6a:	8f 3f       	cpi	r24, 0xFF	; 255
     e6c:	91 05       	cpc	r25, r1
     e6e:	09 f0       	breq	.+2      	; 0xe72 <xMBRTUReceiveFSM+0x62>
     e70:	88 f4       	brcc	.+34     	; 0xe94 <xMBRTUReceiveFSM+0x84>
     e72:	80 91 65 01 	lds	r24, 0x0165
     e76:	90 91 66 01 	lds	r25, 0x0166
     e7a:	9c 01       	movw	r18, r24
     e7c:	2f 5f       	subi	r18, 0xFF	; 255
     e7e:	3f 4f       	sbci	r19, 0xFF	; 255
     e80:	30 93 66 01 	sts	0x0166, r19
     e84:	20 93 65 01 	sts	0x0165, r18
     e88:	29 81       	ldd	r18, Y+1	; 0x01
     e8a:	fc 01       	movw	r30, r24
     e8c:	e3 51       	subi	r30, 0x13	; 19
     e8e:	fe 4f       	sbci	r31, 0xFE	; 254
     e90:	20 83       	st	Z, r18
     e92:	03 c0       	rjmp	.+6      	; 0xe9a <xMBRTUReceiveFSM+0x8a>
     e94:	83 e0       	ldi	r24, 0x03	; 3
     e96:	80 93 6b 01 	sts	0x016B, r24
     e9a:	0e 94 55 0b 	call	0x16aa	; 0x16aa <vMBPortTimersEnable>
     e9e:	80 e0       	ldi	r24, 0x00	; 0
     ea0:	0f 90       	pop	r0
     ea2:	df 91       	pop	r29
     ea4:	cf 91       	pop	r28
     ea6:	08 95       	ret

00000ea8 <xMBRTUTransmitFSM>:
     ea8:	cf 93       	push	r28
     eaa:	80 91 6c 01 	lds	r24, 0x016C
     eae:	88 23       	and	r24, r24
     eb0:	19 f0       	breq	.+6      	; 0xeb8 <xMBRTUTransmitFSM+0x10>
     eb2:	81 30       	cpi	r24, 0x01	; 1
     eb4:	31 f0       	breq	.+12     	; 0xec2 <xMBRTUTransmitFSM+0x1a>
     eb6:	30 c0       	rjmp	.+96     	; 0xf18 <xMBRTUTransmitFSM+0x70>
     eb8:	60 e0       	ldi	r22, 0x00	; 0
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <vMBPortSerialEnable>
     ec0:	2b c0       	rjmp	.+86     	; 0xf18 <xMBRTUTransmitFSM+0x70>
     ec2:	80 91 67 01 	lds	r24, 0x0167
     ec6:	90 91 68 01 	lds	r25, 0x0168
     eca:	89 2b       	or	r24, r25
     ecc:	d1 f0       	breq	.+52     	; 0xf02 <xMBRTUTransmitFSM+0x5a>
     ece:	e0 91 69 01 	lds	r30, 0x0169
     ed2:	f0 91 6a 01 	lds	r31, 0x016A
     ed6:	80 81       	ld	r24, Z
     ed8:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <xMBPortSerialPutByte>
     edc:	80 91 69 01 	lds	r24, 0x0169
     ee0:	90 91 6a 01 	lds	r25, 0x016A
     ee4:	01 96       	adiw	r24, 0x01	; 1
     ee6:	90 93 6a 01 	sts	0x016A, r25
     eea:	80 93 69 01 	sts	0x0169, r24
     eee:	80 91 67 01 	lds	r24, 0x0167
     ef2:	90 91 68 01 	lds	r25, 0x0168
     ef6:	01 97       	sbiw	r24, 0x01	; 1
     ef8:	90 93 68 01 	sts	0x0168, r25
     efc:	80 93 67 01 	sts	0x0167, r24
     f00:	0b c0       	rjmp	.+22     	; 0xf18 <xMBRTUTransmitFSM+0x70>
     f02:	83 e0       	ldi	r24, 0x03	; 3
     f04:	0e 94 40 0b 	call	0x1680	; 0x1680 <xMBPortEventPost>
     f08:	c8 2f       	mov	r28, r24
     f0a:	60 e0       	ldi	r22, 0x00	; 0
     f0c:	81 e0       	ldi	r24, 0x01	; 1
     f0e:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <vMBPortSerialEnable>
     f12:	10 92 6c 01 	sts	0x016C, r1
     f16:	01 c0       	rjmp	.+2      	; 0xf1a <xMBRTUTransmitFSM+0x72>
     f18:	c0 e0       	ldi	r28, 0x00	; 0
     f1a:	8c 2f       	mov	r24, r28
     f1c:	cf 91       	pop	r28
     f1e:	08 95       	ret

00000f20 <xMBRTUTimerT35Expired>:
     f20:	cf 93       	push	r28
     f22:	df 93       	push	r29
     f24:	1f 92       	push	r1
     f26:	cd b7       	in	r28, 0x3d	; 61
     f28:	de b7       	in	r29, 0x3e	; 62
     f2a:	80 91 6b 01 	lds	r24, 0x016B
     f2e:	88 23       	and	r24, r24
     f30:	21 f0       	breq	.+8      	; 0xf3a <xMBRTUTimerT35Expired+0x1a>
     f32:	82 30       	cpi	r24, 0x02	; 2
     f34:	31 f4       	brne	.+12     	; 0xf42 <xMBRTUTimerT35Expired+0x22>
     f36:	81 e0       	ldi	r24, 0x01	; 1
     f38:	01 c0       	rjmp	.+2      	; 0xf3c <xMBRTUTimerT35Expired+0x1c>
     f3a:	80 e0       	ldi	r24, 0x00	; 0
     f3c:	0e 94 40 0b 	call	0x1680	; 0x1680 <xMBPortEventPost>
     f40:	01 c0       	rjmp	.+2      	; 0xf44 <xMBRTUTimerT35Expired+0x24>
     f42:	80 e0       	ldi	r24, 0x00	; 0
     f44:	89 83       	std	Y+1, r24	; 0x01
     f46:	0e 94 72 0b 	call	0x16e4	; 0x16e4 <vMBPortTimersDisable>
     f4a:	91 e0       	ldi	r25, 0x01	; 1
     f4c:	90 93 6b 01 	sts	0x016B, r25
     f50:	89 81       	ldd	r24, Y+1	; 0x01
     f52:	0f 90       	pop	r0
     f54:	df 91       	pop	r29
     f56:	cf 91       	pop	r28
     f58:	08 95       	ret

00000f5a <eMBFuncReadCoils>:
     f5a:	1f 93       	push	r17
     f5c:	cf 93       	push	r28
     f5e:	df 93       	push	r29
     f60:	fc 01       	movw	r30, r24
     f62:	eb 01       	movw	r28, r22
     f64:	88 81       	ld	r24, Y
     f66:	99 81       	ldd	r25, Y+1	; 0x01
     f68:	05 97       	sbiw	r24, 0x05	; 5
     f6a:	09 f0       	breq	.+2      	; 0xf6e <eMBFuncReadCoils+0x14>
     f6c:	43 c0       	rjmp	.+134    	; 0xff4 <eMBFuncReadCoils+0x9a>
     f6e:	a1 81       	ldd	r26, Z+1	; 0x01
     f70:	62 81       	ldd	r22, Z+2	; 0x02
     f72:	43 81       	ldd	r20, Z+3	; 0x03
     f74:	50 e0       	ldi	r21, 0x00	; 0
     f76:	54 2f       	mov	r21, r20
     f78:	44 27       	eor	r20, r20
     f7a:	84 81       	ldd	r24, Z+4	; 0x04
     f7c:	48 2b       	or	r20, r24
     f7e:	ca 01       	movw	r24, r20
     f80:	01 97       	sbiw	r24, 0x01	; 1
     f82:	8f 3c       	cpi	r24, 0xCF	; 207
     f84:	97 40       	sbci	r25, 0x07	; 7
     f86:	b0 f5       	brcc	.+108    	; 0xff4 <eMBFuncReadCoils+0x9a>
     f88:	19 82       	std	Y+1, r1	; 0x01
     f8a:	18 82       	st	Y, r1
     f8c:	81 e0       	ldi	r24, 0x01	; 1
     f8e:	80 83       	st	Z, r24
     f90:	88 81       	ld	r24, Y
     f92:	99 81       	ldd	r25, Y+1	; 0x01
     f94:	01 96       	adiw	r24, 0x01	; 1
     f96:	99 83       	std	Y+1, r25	; 0x01
     f98:	88 83       	st	Y, r24
     f9a:	ca 01       	movw	r24, r20
     f9c:	23 e0       	ldi	r18, 0x03	; 3
     f9e:	96 95       	lsr	r25
     fa0:	87 95       	ror	r24
     fa2:	2a 95       	dec	r18
     fa4:	e1 f7       	brne	.-8      	; 0xf9e <eMBFuncReadCoils+0x44>
     fa6:	9a 01       	movw	r18, r20
     fa8:	27 70       	andi	r18, 0x07	; 7
     faa:	33 27       	eor	r19, r19
     fac:	23 2b       	or	r18, r19
     fae:	19 f0       	breq	.+6      	; 0xfb6 <eMBFuncReadCoils+0x5c>
     fb0:	11 e0       	ldi	r17, 0x01	; 1
     fb2:	18 0f       	add	r17, r24
     fb4:	01 c0       	rjmp	.+2      	; 0xfb8 <eMBFuncReadCoils+0x5e>
     fb6:	18 2f       	mov	r17, r24
     fb8:	11 83       	std	Z+1, r17	; 0x01
     fba:	88 81       	ld	r24, Y
     fbc:	99 81       	ldd	r25, Y+1	; 0x01
     fbe:	01 96       	adiw	r24, 0x01	; 1
     fc0:	99 83       	std	Y+1, r25	; 0x01
     fc2:	88 83       	st	Y, r24
     fc4:	70 e0       	ldi	r23, 0x00	; 0
     fc6:	7a 2b       	or	r23, r26
     fc8:	6f 5f       	subi	r22, 0xFF	; 255
     fca:	7f 4f       	sbci	r23, 0xFF	; 255
     fcc:	20 e0       	ldi	r18, 0x00	; 0
     fce:	cf 01       	movw	r24, r30
     fd0:	02 96       	adiw	r24, 0x02	; 2
     fd2:	0e 94 c2 01 	call	0x384	; 0x384 <eMBRegCoilsCB>
     fd6:	88 23       	and	r24, r24
     fd8:	29 f0       	breq	.+10     	; 0xfe4 <eMBFuncReadCoils+0x8a>
     fda:	df 91       	pop	r29
     fdc:	cf 91       	pop	r28
     fde:	1f 91       	pop	r17
     fe0:	0c 94 71 0a 	jmp	0x14e2	; 0x14e2 <prveMBError2Exception>
     fe4:	88 81       	ld	r24, Y
     fe6:	99 81       	ldd	r25, Y+1	; 0x01
     fe8:	81 0f       	add	r24, r17
     fea:	91 1d       	adc	r25, r1
     fec:	99 83       	std	Y+1, r25	; 0x01
     fee:	88 83       	st	Y, r24
     ff0:	80 e0       	ldi	r24, 0x00	; 0
     ff2:	01 c0       	rjmp	.+2      	; 0xff6 <eMBFuncReadCoils+0x9c>
     ff4:	83 e0       	ldi	r24, 0x03	; 3
     ff6:	df 91       	pop	r29
     ff8:	cf 91       	pop	r28
     ffa:	1f 91       	pop	r17
     ffc:	08 95       	ret

00000ffe <eMBFuncWriteCoil>:
     ffe:	cf 93       	push	r28
    1000:	df 93       	push	r29
    1002:	00 d0       	rcall	.+0      	; 0x1004 <eMBFuncWriteCoil+0x6>
    1004:	cd b7       	in	r28, 0x3d	; 61
    1006:	de b7       	in	r29, 0x3e	; 62
    1008:	fc 01       	movw	r30, r24
    100a:	db 01       	movw	r26, r22
    100c:	8d 91       	ld	r24, X+
    100e:	9c 91       	ld	r25, X
    1010:	05 97       	sbiw	r24, 0x05	; 5
    1012:	09 f5       	brne	.+66     	; 0x1056 <eMBFuncWriteCoil+0x58>
    1014:	91 81       	ldd	r25, Z+1	; 0x01
    1016:	62 81       	ldd	r22, Z+2	; 0x02
    1018:	84 81       	ldd	r24, Z+4	; 0x04
    101a:	81 11       	cpse	r24, r1
    101c:	1c c0       	rjmp	.+56     	; 0x1056 <eMBFuncWriteCoil+0x58>
    101e:	83 81       	ldd	r24, Z+3	; 0x03
    1020:	2f ef       	ldi	r18, 0xFF	; 255
    1022:	28 0f       	add	r18, r24
    1024:	2e 3f       	cpi	r18, 0xFE	; 254
    1026:	b8 f0       	brcs	.+46     	; 0x1056 <eMBFuncWriteCoil+0x58>
    1028:	1a 82       	std	Y+2, r1	; 0x02
    102a:	8f 3f       	cpi	r24, 0xFF	; 255
    102c:	19 f4       	brne	.+6      	; 0x1034 <eMBFuncWriteCoil+0x36>
    102e:	81 e0       	ldi	r24, 0x01	; 1
    1030:	89 83       	std	Y+1, r24	; 0x01
    1032:	01 c0       	rjmp	.+2      	; 0x1036 <eMBFuncWriteCoil+0x38>
    1034:	19 82       	std	Y+1, r1	; 0x01
    1036:	70 e0       	ldi	r23, 0x00	; 0
    1038:	79 2b       	or	r23, r25
    103a:	6f 5f       	subi	r22, 0xFF	; 255
    103c:	7f 4f       	sbci	r23, 0xFF	; 255
    103e:	21 e0       	ldi	r18, 0x01	; 1
    1040:	41 e0       	ldi	r20, 0x01	; 1
    1042:	50 e0       	ldi	r21, 0x00	; 0
    1044:	ce 01       	movw	r24, r28
    1046:	01 96       	adiw	r24, 0x01	; 1
    1048:	0e 94 c2 01 	call	0x384	; 0x384 <eMBRegCoilsCB>
    104c:	88 23       	and	r24, r24
    104e:	29 f0       	breq	.+10     	; 0x105a <eMBFuncWriteCoil+0x5c>
    1050:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <prveMBError2Exception>
    1054:	03 c0       	rjmp	.+6      	; 0x105c <eMBFuncWriteCoil+0x5e>
    1056:	83 e0       	ldi	r24, 0x03	; 3
    1058:	01 c0       	rjmp	.+2      	; 0x105c <eMBFuncWriteCoil+0x5e>
    105a:	80 e0       	ldi	r24, 0x00	; 0
    105c:	0f 90       	pop	r0
    105e:	0f 90       	pop	r0
    1060:	df 91       	pop	r29
    1062:	cf 91       	pop	r28
    1064:	08 95       	ret

00001066 <eMBFuncWriteMultipleCoils>:
    1066:	cf 93       	push	r28
    1068:	df 93       	push	r29
    106a:	fc 01       	movw	r30, r24
    106c:	eb 01       	movw	r28, r22
    106e:	88 81       	ld	r24, Y
    1070:	99 81       	ldd	r25, Y+1	; 0x01
    1072:	06 97       	sbiw	r24, 0x06	; 6
    1074:	90 f1       	brcs	.+100    	; 0x10da <eMBFuncWriteMultipleCoils+0x74>
    1076:	a1 81       	ldd	r26, Z+1	; 0x01
    1078:	62 81       	ldd	r22, Z+2	; 0x02
    107a:	43 81       	ldd	r20, Z+3	; 0x03
    107c:	50 e0       	ldi	r21, 0x00	; 0
    107e:	54 2f       	mov	r21, r20
    1080:	44 27       	eor	r20, r20
    1082:	84 81       	ldd	r24, Z+4	; 0x04
    1084:	48 2b       	or	r20, r24
    1086:	75 81       	ldd	r23, Z+5	; 0x05
    1088:	9a 01       	movw	r18, r20
    108a:	27 70       	andi	r18, 0x07	; 7
    108c:	33 27       	eor	r19, r19
    108e:	ca 01       	movw	r24, r20
    1090:	b3 e0       	ldi	r27, 0x03	; 3
    1092:	96 95       	lsr	r25
    1094:	87 95       	ror	r24
    1096:	ba 95       	dec	r27
    1098:	e1 f7       	brne	.-8      	; 0x1092 <eMBFuncWriteMultipleCoils+0x2c>
    109a:	23 2b       	or	r18, r19
    109c:	09 f0       	breq	.+2      	; 0x10a0 <eMBFuncWriteMultipleCoils+0x3a>
    109e:	8f 5f       	subi	r24, 0xFF	; 255
    10a0:	9a 01       	movw	r18, r20
    10a2:	21 50       	subi	r18, 0x01	; 1
    10a4:	31 09       	sbc	r19, r1
    10a6:	20 3b       	cpi	r18, 0xB0	; 176
    10a8:	37 40       	sbci	r19, 0x07	; 7
    10aa:	b8 f4       	brcc	.+46     	; 0x10da <eMBFuncWriteMultipleCoils+0x74>
    10ac:	87 13       	cpse	r24, r23
    10ae:	15 c0       	rjmp	.+42     	; 0x10da <eMBFuncWriteMultipleCoils+0x74>
    10b0:	70 e0       	ldi	r23, 0x00	; 0
    10b2:	7a 2b       	or	r23, r26
    10b4:	6f 5f       	subi	r22, 0xFF	; 255
    10b6:	7f 4f       	sbci	r23, 0xFF	; 255
    10b8:	21 e0       	ldi	r18, 0x01	; 1
    10ba:	cf 01       	movw	r24, r30
    10bc:	06 96       	adiw	r24, 0x06	; 6
    10be:	0e 94 c2 01 	call	0x384	; 0x384 <eMBRegCoilsCB>
    10c2:	88 23       	and	r24, r24
    10c4:	21 f0       	breq	.+8      	; 0x10ce <eMBFuncWriteMultipleCoils+0x68>
    10c6:	df 91       	pop	r29
    10c8:	cf 91       	pop	r28
    10ca:	0c 94 71 0a 	jmp	0x14e2	; 0x14e2 <prveMBError2Exception>
    10ce:	85 e0       	ldi	r24, 0x05	; 5
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	99 83       	std	Y+1, r25	; 0x01
    10d4:	88 83       	st	Y, r24
    10d6:	80 e0       	ldi	r24, 0x00	; 0
    10d8:	01 c0       	rjmp	.+2      	; 0x10dc <eMBFuncWriteMultipleCoils+0x76>
    10da:	83 e0       	ldi	r24, 0x03	; 3
    10dc:	df 91       	pop	r29
    10de:	cf 91       	pop	r28
    10e0:	08 95       	ret

000010e2 <eMBFuncWriteHoldingRegister>:
    10e2:	fb 01       	movw	r30, r22
    10e4:	20 81       	ld	r18, Z
    10e6:	31 81       	ldd	r19, Z+1	; 0x01
    10e8:	25 30       	cpi	r18, 0x05	; 5
    10ea:	31 05       	cpc	r19, r1
    10ec:	99 f4       	brne	.+38     	; 0x1114 <eMBFuncWriteHoldingRegister+0x32>
    10ee:	fc 01       	movw	r30, r24
    10f0:	61 81       	ldd	r22, Z+1	; 0x01
    10f2:	70 e0       	ldi	r23, 0x00	; 0
    10f4:	76 2f       	mov	r23, r22
    10f6:	66 27       	eor	r22, r22
    10f8:	22 81       	ldd	r18, Z+2	; 0x02
    10fa:	62 2b       	or	r22, r18
    10fc:	6f 5f       	subi	r22, 0xFF	; 255
    10fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1100:	21 e0       	ldi	r18, 0x01	; 1
    1102:	41 e0       	ldi	r20, 0x01	; 1
    1104:	50 e0       	ldi	r21, 0x00	; 0
    1106:	03 96       	adiw	r24, 0x03	; 3
    1108:	0e 94 11 02 	call	0x422	; 0x422 <eMBRegHoldingCB>
    110c:	88 23       	and	r24, r24
    110e:	21 f0       	breq	.+8      	; 0x1118 <eMBFuncWriteHoldingRegister+0x36>
    1110:	0c 94 71 0a 	jmp	0x14e2	; 0x14e2 <prveMBError2Exception>
    1114:	83 e0       	ldi	r24, 0x03	; 3
    1116:	08 95       	ret
    1118:	80 e0       	ldi	r24, 0x00	; 0
    111a:	08 95       	ret

0000111c <eMBFuncWriteMultipleHoldingRegister>:
    111c:	cf 93       	push	r28
    111e:	df 93       	push	r29
    1120:	fc 01       	movw	r30, r24
    1122:	eb 01       	movw	r28, r22
    1124:	88 81       	ld	r24, Y
    1126:	99 81       	ldd	r25, Y+1	; 0x01
    1128:	06 97       	sbiw	r24, 0x06	; 6
    112a:	38 f1       	brcs	.+78     	; 0x117a <eMBFuncWriteMultipleHoldingRegister+0x5e>
    112c:	21 81       	ldd	r18, Z+1	; 0x01
    112e:	62 81       	ldd	r22, Z+2	; 0x02
    1130:	43 81       	ldd	r20, Z+3	; 0x03
    1132:	50 e0       	ldi	r21, 0x00	; 0
    1134:	54 2f       	mov	r21, r20
    1136:	44 27       	eor	r20, r20
    1138:	84 81       	ldd	r24, Z+4	; 0x04
    113a:	48 2b       	or	r20, r24
    113c:	35 81       	ldd	r19, Z+5	; 0x05
    113e:	ca 01       	movw	r24, r20
    1140:	01 97       	sbiw	r24, 0x01	; 1
    1142:	88 37       	cpi	r24, 0x78	; 120
    1144:	91 05       	cpc	r25, r1
    1146:	c8 f4       	brcc	.+50     	; 0x117a <eMBFuncWriteMultipleHoldingRegister+0x5e>
    1148:	84 2f       	mov	r24, r20
    114a:	88 0f       	add	r24, r24
    114c:	38 13       	cpse	r19, r24
    114e:	15 c0       	rjmp	.+42     	; 0x117a <eMBFuncWriteMultipleHoldingRegister+0x5e>
    1150:	70 e0       	ldi	r23, 0x00	; 0
    1152:	72 2b       	or	r23, r18
    1154:	6f 5f       	subi	r22, 0xFF	; 255
    1156:	7f 4f       	sbci	r23, 0xFF	; 255
    1158:	21 e0       	ldi	r18, 0x01	; 1
    115a:	cf 01       	movw	r24, r30
    115c:	06 96       	adiw	r24, 0x06	; 6
    115e:	0e 94 11 02 	call	0x422	; 0x422 <eMBRegHoldingCB>
    1162:	88 23       	and	r24, r24
    1164:	21 f0       	breq	.+8      	; 0x116e <eMBFuncWriteMultipleHoldingRegister+0x52>
    1166:	df 91       	pop	r29
    1168:	cf 91       	pop	r28
    116a:	0c 94 71 0a 	jmp	0x14e2	; 0x14e2 <prveMBError2Exception>
    116e:	85 e0       	ldi	r24, 0x05	; 5
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	99 83       	std	Y+1, r25	; 0x01
    1174:	88 83       	st	Y, r24
    1176:	80 e0       	ldi	r24, 0x00	; 0
    1178:	01 c0       	rjmp	.+2      	; 0x117c <eMBFuncWriteMultipleHoldingRegister+0x60>
    117a:	83 e0       	ldi	r24, 0x03	; 3
    117c:	df 91       	pop	r29
    117e:	cf 91       	pop	r28
    1180:	08 95       	ret

00001182 <eMBFuncReadHoldingRegister>:
    1182:	0f 93       	push	r16
    1184:	1f 93       	push	r17
    1186:	cf 93       	push	r28
    1188:	df 93       	push	r29
    118a:	fc 01       	movw	r30, r24
    118c:	eb 01       	movw	r28, r22
    118e:	88 81       	ld	r24, Y
    1190:	99 81       	ldd	r25, Y+1	; 0x01
    1192:	05 97       	sbiw	r24, 0x05	; 5
    1194:	b1 f5       	brne	.+108    	; 0x1202 <eMBFuncReadHoldingRegister+0x80>
    1196:	31 81       	ldd	r19, Z+1	; 0x01
    1198:	62 81       	ldd	r22, Z+2	; 0x02
    119a:	24 81       	ldd	r18, Z+4	; 0x04
    119c:	02 2f       	mov	r16, r18
    119e:	10 e0       	ldi	r17, 0x00	; 0
    11a0:	c8 01       	movw	r24, r16
    11a2:	01 97       	sbiw	r24, 0x01	; 1
    11a4:	8d 37       	cpi	r24, 0x7D	; 125
    11a6:	91 05       	cpc	r25, r1
    11a8:	60 f5       	brcc	.+88     	; 0x1202 <eMBFuncReadHoldingRegister+0x80>
    11aa:	19 82       	std	Y+1, r1	; 0x01
    11ac:	18 82       	st	Y, r1
    11ae:	83 e0       	ldi	r24, 0x03	; 3
    11b0:	80 83       	st	Z, r24
    11b2:	88 81       	ld	r24, Y
    11b4:	99 81       	ldd	r25, Y+1	; 0x01
    11b6:	01 96       	adiw	r24, 0x01	; 1
    11b8:	99 83       	std	Y+1, r25	; 0x01
    11ba:	88 83       	st	Y, r24
    11bc:	22 0f       	add	r18, r18
    11be:	21 83       	std	Z+1, r18	; 0x01
    11c0:	88 81       	ld	r24, Y
    11c2:	99 81       	ldd	r25, Y+1	; 0x01
    11c4:	01 96       	adiw	r24, 0x01	; 1
    11c6:	99 83       	std	Y+1, r25	; 0x01
    11c8:	88 83       	st	Y, r24
    11ca:	70 e0       	ldi	r23, 0x00	; 0
    11cc:	73 2b       	or	r23, r19
    11ce:	6f 5f       	subi	r22, 0xFF	; 255
    11d0:	7f 4f       	sbci	r23, 0xFF	; 255
    11d2:	20 e0       	ldi	r18, 0x00	; 0
    11d4:	a8 01       	movw	r20, r16
    11d6:	cf 01       	movw	r24, r30
    11d8:	02 96       	adiw	r24, 0x02	; 2
    11da:	0e 94 11 02 	call	0x422	; 0x422 <eMBRegHoldingCB>
    11de:	88 23       	and	r24, r24
    11e0:	31 f0       	breq	.+12     	; 0x11ee <eMBFuncReadHoldingRegister+0x6c>
    11e2:	df 91       	pop	r29
    11e4:	cf 91       	pop	r28
    11e6:	1f 91       	pop	r17
    11e8:	0f 91       	pop	r16
    11ea:	0c 94 71 0a 	jmp	0x14e2	; 0x14e2 <prveMBError2Exception>
    11ee:	00 0f       	add	r16, r16
    11f0:	11 1f       	adc	r17, r17
    11f2:	88 81       	ld	r24, Y
    11f4:	99 81       	ldd	r25, Y+1	; 0x01
    11f6:	80 0f       	add	r24, r16
    11f8:	91 1f       	adc	r25, r17
    11fa:	99 83       	std	Y+1, r25	; 0x01
    11fc:	88 83       	st	Y, r24
    11fe:	80 e0       	ldi	r24, 0x00	; 0
    1200:	01 c0       	rjmp	.+2      	; 0x1204 <eMBFuncReadHoldingRegister+0x82>
    1202:	83 e0       	ldi	r24, 0x03	; 3
    1204:	df 91       	pop	r29
    1206:	cf 91       	pop	r28
    1208:	1f 91       	pop	r17
    120a:	0f 91       	pop	r16
    120c:	08 95       	ret

0000120e <eMBFuncReadWriteMultipleHoldingRegister>:
    120e:	cf 92       	push	r12
    1210:	df 92       	push	r13
    1212:	ef 92       	push	r14
    1214:	ff 92       	push	r15
    1216:	0f 93       	push	r16
    1218:	1f 93       	push	r17
    121a:	cf 93       	push	r28
    121c:	df 93       	push	r29
    121e:	ec 01       	movw	r28, r24
    1220:	8b 01       	movw	r16, r22
    1222:	fb 01       	movw	r30, r22
    1224:	80 81       	ld	r24, Z
    1226:	91 81       	ldd	r25, Z+1	; 0x01
    1228:	0a 97       	sbiw	r24, 0x0a	; 10
    122a:	08 f4       	brcc	.+2      	; 0x122e <eMBFuncReadWriteMultipleHoldingRegister+0x20>
    122c:	56 c0       	rjmp	.+172    	; 0x12da <eMBFuncReadWriteMultipleHoldingRegister+0xcc>
    122e:	d9 80       	ldd	r13, Y+1	; 0x01
    1230:	ca 80       	ldd	r12, Y+2	; 0x02
    1232:	eb 80       	ldd	r14, Y+3	; 0x03
    1234:	f1 2c       	mov	r15, r1
    1236:	fe 2c       	mov	r15, r14
    1238:	ee 24       	eor	r14, r14
    123a:	8c 81       	ldd	r24, Y+4	; 0x04
    123c:	e8 2a       	or	r14, r24
    123e:	ed 81       	ldd	r30, Y+5	; 0x05
    1240:	6e 81       	ldd	r22, Y+6	; 0x06
    1242:	9f 81       	ldd	r25, Y+7	; 0x07
    1244:	48 85       	ldd	r20, Y+8	; 0x08
    1246:	89 85       	ldd	r24, Y+9	; 0x09
    1248:	97 01       	movw	r18, r14
    124a:	21 50       	subi	r18, 0x01	; 1
    124c:	31 09       	sbc	r19, r1
    124e:	2d 37       	cpi	r18, 0x7D	; 125
    1250:	31 05       	cpc	r19, r1
    1252:	08 f0       	brcs	.+2      	; 0x1256 <eMBFuncReadWriteMultipleHoldingRegister+0x48>
    1254:	44 c0       	rjmp	.+136    	; 0x12de <eMBFuncReadWriteMultipleHoldingRegister+0xd0>
    1256:	50 e0       	ldi	r21, 0x00	; 0
    1258:	59 2b       	or	r21, r25
    125a:	9a 01       	movw	r18, r20
    125c:	21 50       	subi	r18, 0x01	; 1
    125e:	31 09       	sbc	r19, r1
    1260:	29 37       	cpi	r18, 0x79	; 121
    1262:	31 05       	cpc	r19, r1
    1264:	e0 f5       	brcc	.+120    	; 0x12de <eMBFuncReadWriteMultipleHoldingRegister+0xd0>
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	9a 01       	movw	r18, r20
    126a:	22 0f       	add	r18, r18
    126c:	33 1f       	adc	r19, r19
    126e:	28 17       	cp	r18, r24
    1270:	39 07       	cpc	r19, r25
    1272:	a9 f5       	brne	.+106    	; 0x12de <eMBFuncReadWriteMultipleHoldingRegister+0xd0>
    1274:	70 e0       	ldi	r23, 0x00	; 0
    1276:	7e 2b       	or	r23, r30
    1278:	6f 5f       	subi	r22, 0xFF	; 255
    127a:	7f 4f       	sbci	r23, 0xFF	; 255
    127c:	21 e0       	ldi	r18, 0x01	; 1
    127e:	ce 01       	movw	r24, r28
    1280:	0a 96       	adiw	r24, 0x0a	; 10
    1282:	0e 94 11 02 	call	0x422	; 0x422 <eMBRegHoldingCB>
    1286:	81 11       	cpse	r24, r1
    1288:	2c c0       	rjmp	.+88     	; 0x12e2 <eMBFuncReadWriteMultipleHoldingRegister+0xd4>
    128a:	f8 01       	movw	r30, r16
    128c:	11 82       	std	Z+1, r1	; 0x01
    128e:	10 82       	st	Z, r1
    1290:	87 e1       	ldi	r24, 0x17	; 23
    1292:	88 83       	st	Y, r24
    1294:	80 81       	ld	r24, Z
    1296:	91 81       	ldd	r25, Z+1	; 0x01
    1298:	01 96       	adiw	r24, 0x01	; 1
    129a:	91 83       	std	Z+1, r25	; 0x01
    129c:	80 83       	st	Z, r24
    129e:	8e 2d       	mov	r24, r14
    12a0:	88 0f       	add	r24, r24
    12a2:	89 83       	std	Y+1, r24	; 0x01
    12a4:	80 81       	ld	r24, Z
    12a6:	91 81       	ldd	r25, Z+1	; 0x01
    12a8:	01 96       	adiw	r24, 0x01	; 1
    12aa:	91 83       	std	Z+1, r25	; 0x01
    12ac:	80 83       	st	Z, r24
    12ae:	6c 2d       	mov	r22, r12
    12b0:	70 e0       	ldi	r23, 0x00	; 0
    12b2:	7d 29       	or	r23, r13
    12b4:	6f 5f       	subi	r22, 0xFF	; 255
    12b6:	7f 4f       	sbci	r23, 0xFF	; 255
    12b8:	20 e0       	ldi	r18, 0x00	; 0
    12ba:	a7 01       	movw	r20, r14
    12bc:	ce 01       	movw	r24, r28
    12be:	02 96       	adiw	r24, 0x02	; 2
    12c0:	0e 94 11 02 	call	0x422	; 0x422 <eMBRegHoldingCB>
    12c4:	81 11       	cpse	r24, r1
    12c6:	0d c0       	rjmp	.+26     	; 0x12e2 <eMBFuncReadWriteMultipleHoldingRegister+0xd4>
    12c8:	ee 0c       	add	r14, r14
    12ca:	ff 1c       	adc	r15, r15
    12cc:	f8 01       	movw	r30, r16
    12ce:	80 81       	ld	r24, Z
    12d0:	91 81       	ldd	r25, Z+1	; 0x01
    12d2:	8e 0d       	add	r24, r14
    12d4:	9f 1d       	adc	r25, r15
    12d6:	91 83       	std	Z+1, r25	; 0x01
    12d8:	80 83       	st	Z, r24
    12da:	80 e0       	ldi	r24, 0x00	; 0
    12dc:	0c c0       	rjmp	.+24     	; 0x12f6 <eMBFuncReadWriteMultipleHoldingRegister+0xe8>
    12de:	83 e0       	ldi	r24, 0x03	; 3
    12e0:	0a c0       	rjmp	.+20     	; 0x12f6 <eMBFuncReadWriteMultipleHoldingRegister+0xe8>
    12e2:	df 91       	pop	r29
    12e4:	cf 91       	pop	r28
    12e6:	1f 91       	pop	r17
    12e8:	0f 91       	pop	r16
    12ea:	ff 90       	pop	r15
    12ec:	ef 90       	pop	r14
    12ee:	df 90       	pop	r13
    12f0:	cf 90       	pop	r12
    12f2:	0c 94 71 0a 	jmp	0x14e2	; 0x14e2 <prveMBError2Exception>
    12f6:	df 91       	pop	r29
    12f8:	cf 91       	pop	r28
    12fa:	1f 91       	pop	r17
    12fc:	0f 91       	pop	r16
    12fe:	ff 90       	pop	r15
    1300:	ef 90       	pop	r14
    1302:	df 90       	pop	r13
    1304:	cf 90       	pop	r12
    1306:	08 95       	ret

00001308 <eMBSetSlaveID>:
    1308:	cf 93       	push	r28
    130a:	df 93       	push	r29
    130c:	e6 2f       	mov	r30, r22
    130e:	ba 01       	movw	r22, r20
    1310:	e9 01       	movw	r28, r18
    1312:	22 96       	adiw	r28, 0x02	; 2
    1314:	c0 32       	cpi	r28, 0x20	; 32
    1316:	d1 05       	cpc	r29, r1
    1318:	e0 f4       	brcc	.+56     	; 0x1352 <eMBSetSlaveID+0x4a>
    131a:	80 93 6f 01 	sts	0x016F, r24
    131e:	82 e0       	ldi	r24, 0x02	; 2
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	90 93 6e 01 	sts	0x016E, r25
    1326:	80 93 6d 01 	sts	0x016D, r24
    132a:	81 e0       	ldi	r24, 0x01	; 1
    132c:	e1 11       	cpse	r30, r1
    132e:	01 c0       	rjmp	.+2      	; 0x1332 <eMBSetSlaveID+0x2a>
    1330:	80 e0       	ldi	r24, 0x00	; 0
    1332:	81 95       	neg	r24
    1334:	80 93 70 01 	sts	0x0170, r24
    1338:	21 15       	cp	r18, r1
    133a:	31 05       	cpc	r19, r1
    133c:	61 f0       	breq	.+24     	; 0x1356 <eMBSetSlaveID+0x4e>
    133e:	a9 01       	movw	r20, r18
    1340:	81 e7       	ldi	r24, 0x71	; 113
    1342:	91 e0       	ldi	r25, 0x01	; 1
    1344:	0e 94 27 0c 	call	0x184e	; 0x184e <memcpy>
    1348:	d0 93 6e 01 	sts	0x016E, r29
    134c:	c0 93 6d 01 	sts	0x016D, r28
    1350:	02 c0       	rjmp	.+4      	; 0x1356 <eMBSetSlaveID+0x4e>
    1352:	84 e0       	ldi	r24, 0x04	; 4
    1354:	01 c0       	rjmp	.+2      	; 0x1358 <eMBSetSlaveID+0x50>
    1356:	80 e0       	ldi	r24, 0x00	; 0
    1358:	df 91       	pop	r29
    135a:	cf 91       	pop	r28
    135c:	08 95       	ret

0000135e <eMBFuncReportSlaveID>:
    135e:	0f 93       	push	r16
    1360:	1f 93       	push	r17
    1362:	cf 93       	push	r28
    1364:	df 93       	push	r29
    1366:	8b 01       	movw	r16, r22
    1368:	c0 91 6d 01 	lds	r28, 0x016D
    136c:	d0 91 6e 01 	lds	r29, 0x016E
    1370:	ae 01       	movw	r20, r28
    1372:	6f e6       	ldi	r22, 0x6F	; 111
    1374:	71 e0       	ldi	r23, 0x01	; 1
    1376:	01 96       	adiw	r24, 0x01	; 1
    1378:	0e 94 27 0c 	call	0x184e	; 0x184e <memcpy>
    137c:	21 96       	adiw	r28, 0x01	; 1
    137e:	f8 01       	movw	r30, r16
    1380:	d1 83       	std	Z+1, r29	; 0x01
    1382:	c0 83       	st	Z, r28
    1384:	80 e0       	ldi	r24, 0x00	; 0
    1386:	df 91       	pop	r29
    1388:	cf 91       	pop	r28
    138a:	1f 91       	pop	r17
    138c:	0f 91       	pop	r16
    138e:	08 95       	ret

00001390 <eMBFuncReadDiscreteInputs>:
    1390:	1f 93       	push	r17
    1392:	cf 93       	push	r28
    1394:	df 93       	push	r29
    1396:	fc 01       	movw	r30, r24
    1398:	eb 01       	movw	r28, r22
    139a:	88 81       	ld	r24, Y
    139c:	99 81       	ldd	r25, Y+1	; 0x01
    139e:	05 97       	sbiw	r24, 0x05	; 5
    13a0:	09 f0       	breq	.+2      	; 0x13a4 <eMBFuncReadDiscreteInputs+0x14>
    13a2:	42 c0       	rjmp	.+132    	; 0x1428 <eMBFuncReadDiscreteInputs+0x98>
    13a4:	a1 81       	ldd	r26, Z+1	; 0x01
    13a6:	62 81       	ldd	r22, Z+2	; 0x02
    13a8:	43 81       	ldd	r20, Z+3	; 0x03
    13aa:	50 e0       	ldi	r21, 0x00	; 0
    13ac:	54 2f       	mov	r21, r20
    13ae:	44 27       	eor	r20, r20
    13b0:	84 81       	ldd	r24, Z+4	; 0x04
    13b2:	48 2b       	or	r20, r24
    13b4:	ca 01       	movw	r24, r20
    13b6:	01 97       	sbiw	r24, 0x01	; 1
    13b8:	8f 3c       	cpi	r24, 0xCF	; 207
    13ba:	97 40       	sbci	r25, 0x07	; 7
    13bc:	a8 f5       	brcc	.+106    	; 0x1428 <eMBFuncReadDiscreteInputs+0x98>
    13be:	19 82       	std	Y+1, r1	; 0x01
    13c0:	18 82       	st	Y, r1
    13c2:	82 e0       	ldi	r24, 0x02	; 2
    13c4:	80 83       	st	Z, r24
    13c6:	88 81       	ld	r24, Y
    13c8:	99 81       	ldd	r25, Y+1	; 0x01
    13ca:	01 96       	adiw	r24, 0x01	; 1
    13cc:	99 83       	std	Y+1, r25	; 0x01
    13ce:	88 83       	st	Y, r24
    13d0:	ca 01       	movw	r24, r20
    13d2:	23 e0       	ldi	r18, 0x03	; 3
    13d4:	96 95       	lsr	r25
    13d6:	87 95       	ror	r24
    13d8:	2a 95       	dec	r18
    13da:	e1 f7       	brne	.-8      	; 0x13d4 <eMBFuncReadDiscreteInputs+0x44>
    13dc:	9a 01       	movw	r18, r20
    13de:	27 70       	andi	r18, 0x07	; 7
    13e0:	33 27       	eor	r19, r19
    13e2:	23 2b       	or	r18, r19
    13e4:	19 f0       	breq	.+6      	; 0x13ec <eMBFuncReadDiscreteInputs+0x5c>
    13e6:	11 e0       	ldi	r17, 0x01	; 1
    13e8:	18 0f       	add	r17, r24
    13ea:	01 c0       	rjmp	.+2      	; 0x13ee <eMBFuncReadDiscreteInputs+0x5e>
    13ec:	18 2f       	mov	r17, r24
    13ee:	11 83       	std	Z+1, r17	; 0x01
    13f0:	88 81       	ld	r24, Y
    13f2:	99 81       	ldd	r25, Y+1	; 0x01
    13f4:	01 96       	adiw	r24, 0x01	; 1
    13f6:	99 83       	std	Y+1, r25	; 0x01
    13f8:	88 83       	st	Y, r24
    13fa:	70 e0       	ldi	r23, 0x00	; 0
    13fc:	7a 2b       	or	r23, r26
    13fe:	6f 5f       	subi	r22, 0xFF	; 255
    1400:	7f 4f       	sbci	r23, 0xFF	; 255
    1402:	cf 01       	movw	r24, r30
    1404:	02 96       	adiw	r24, 0x02	; 2
    1406:	0e 94 60 02 	call	0x4c0	; 0x4c0 <eMBRegDiscreteCB>
    140a:	88 23       	and	r24, r24
    140c:	29 f0       	breq	.+10     	; 0x1418 <eMBFuncReadDiscreteInputs+0x88>
    140e:	df 91       	pop	r29
    1410:	cf 91       	pop	r28
    1412:	1f 91       	pop	r17
    1414:	0c 94 71 0a 	jmp	0x14e2	; 0x14e2 <prveMBError2Exception>
    1418:	88 81       	ld	r24, Y
    141a:	99 81       	ldd	r25, Y+1	; 0x01
    141c:	81 0f       	add	r24, r17
    141e:	91 1d       	adc	r25, r1
    1420:	99 83       	std	Y+1, r25	; 0x01
    1422:	88 83       	st	Y, r24
    1424:	80 e0       	ldi	r24, 0x00	; 0
    1426:	01 c0       	rjmp	.+2      	; 0x142a <eMBFuncReadDiscreteInputs+0x9a>
    1428:	83 e0       	ldi	r24, 0x03	; 3
    142a:	df 91       	pop	r29
    142c:	cf 91       	pop	r28
    142e:	1f 91       	pop	r17
    1430:	08 95       	ret

00001432 <xMBUtilSetBits>:
    1432:	cf 93       	push	r28
    1434:	df 93       	push	r29
    1436:	30 e0       	ldi	r19, 0x00	; 0
    1438:	db 01       	movw	r26, r22
    143a:	53 e0       	ldi	r21, 0x03	; 3
    143c:	b6 95       	lsr	r27
    143e:	a7 95       	ror	r26
    1440:	5a 95       	dec	r21
    1442:	e1 f7       	brne	.-8      	; 0x143c <xMBUtilSetBits+0xa>
    1444:	67 70       	andi	r22, 0x07	; 7
    1446:	77 27       	eor	r23, r23
    1448:	e1 e0       	ldi	r30, 0x01	; 1
    144a:	f0 e0       	ldi	r31, 0x00	; 0
    144c:	02 c0       	rjmp	.+4      	; 0x1452 <xMBUtilSetBits+0x20>
    144e:	ee 0f       	add	r30, r30
    1450:	ff 1f       	adc	r31, r31
    1452:	4a 95       	dec	r20
    1454:	e2 f7       	brpl	.-8      	; 0x144e <xMBUtilSetBits+0x1c>
    1456:	31 97       	sbiw	r30, 0x01	; 1
    1458:	ec 01       	movw	r28, r24
    145a:	ca 0f       	add	r28, r26
    145c:	db 1f       	adc	r29, r27
    145e:	58 81       	ld	r21, Y
    1460:	11 96       	adiw	r26, 0x01	; 1
    1462:	a8 0f       	add	r26, r24
    1464:	b9 1f       	adc	r27, r25
    1466:	4c 91       	ld	r20, X
    1468:	85 2f       	mov	r24, r21
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	94 2b       	or	r25, r20
    146e:	06 2e       	mov	r0, r22
    1470:	02 c0       	rjmp	.+4      	; 0x1476 <xMBUtilSetBits+0x44>
    1472:	ee 0f       	add	r30, r30
    1474:	ff 1f       	adc	r31, r31
    1476:	0a 94       	dec	r0
    1478:	e2 f7       	brpl	.-8      	; 0x1472 <xMBUtilSetBits+0x40>
    147a:	e0 95       	com	r30
    147c:	f0 95       	com	r31
    147e:	8e 23       	and	r24, r30
    1480:	9f 23       	and	r25, r31
    1482:	02 c0       	rjmp	.+4      	; 0x1488 <xMBUtilSetBits+0x56>
    1484:	22 0f       	add	r18, r18
    1486:	33 1f       	adc	r19, r19
    1488:	6a 95       	dec	r22
    148a:	e2 f7       	brpl	.-8      	; 0x1484 <xMBUtilSetBits+0x52>
    148c:	82 2b       	or	r24, r18
    148e:	93 2b       	or	r25, r19
    1490:	88 83       	st	Y, r24
    1492:	9c 93       	st	X, r25
    1494:	df 91       	pop	r29
    1496:	cf 91       	pop	r28
    1498:	08 95       	ret

0000149a <xMBUtilGetBits>:
    149a:	9b 01       	movw	r18, r22
    149c:	e3 e0       	ldi	r30, 0x03	; 3
    149e:	36 95       	lsr	r19
    14a0:	27 95       	ror	r18
    14a2:	ea 95       	dec	r30
    14a4:	e1 f7       	brne	.-8      	; 0x149e <xMBUtilGetBits+0x4>
    14a6:	fc 01       	movw	r30, r24
    14a8:	e2 0f       	add	r30, r18
    14aa:	f3 1f       	adc	r31, r19
    14ac:	80 81       	ld	r24, Z
    14ae:	51 81       	ldd	r21, Z+1	; 0x01
    14b0:	90 e0       	ldi	r25, 0x00	; 0
    14b2:	95 2b       	or	r25, r21
    14b4:	f3 e0       	ldi	r31, 0x03	; 3
    14b6:	22 0f       	add	r18, r18
    14b8:	33 1f       	adc	r19, r19
    14ba:	fa 95       	dec	r31
    14bc:	e1 f7       	brne	.-8      	; 0x14b6 <xMBUtilGetBits+0x1c>
    14be:	62 1b       	sub	r22, r18
    14c0:	73 0b       	sbc	r23, r19
    14c2:	02 c0       	rjmp	.+4      	; 0x14c8 <xMBUtilGetBits+0x2e>
    14c4:	96 95       	lsr	r25
    14c6:	87 95       	ror	r24
    14c8:	6a 95       	dec	r22
    14ca:	e2 f7       	brpl	.-8      	; 0x14c4 <xMBUtilGetBits+0x2a>
    14cc:	21 e0       	ldi	r18, 0x01	; 1
    14ce:	30 e0       	ldi	r19, 0x00	; 0
    14d0:	02 c0       	rjmp	.+4      	; 0x14d6 <xMBUtilGetBits+0x3c>
    14d2:	22 0f       	add	r18, r18
    14d4:	33 1f       	adc	r19, r19
    14d6:	4a 95       	dec	r20
    14d8:	e2 f7       	brpl	.-8      	; 0x14d2 <xMBUtilGetBits+0x38>
    14da:	21 50       	subi	r18, 0x01	; 1
    14dc:	31 09       	sbc	r19, r1
    14de:	82 23       	and	r24, r18
    14e0:	08 95       	ret

000014e2 <prveMBError2Exception>:
    14e2:	88 30       	cpi	r24, 0x08	; 8
    14e4:	30 f4       	brcc	.+12     	; 0x14f2 <prveMBError2Exception+0x10>
    14e6:	e8 2f       	mov	r30, r24
    14e8:	f0 e0       	ldi	r31, 0x00	; 0
    14ea:	ee 5c       	subi	r30, 0xCE	; 206
    14ec:	fe 4f       	sbci	r31, 0xFE	; 254
    14ee:	80 81       	ld	r24, Z
    14f0:	08 95       	ret
    14f2:	84 e0       	ldi	r24, 0x04	; 4
    14f4:	08 95       	ret

000014f6 <vMBPortSerialEnable>:
    14f6:	90 91 c1 00 	lds	r25, 0x00C1
    14fa:	98 64       	ori	r25, 0x48	; 72
    14fc:	90 93 c1 00 	sts	0x00C1, r25
    1500:	88 23       	and	r24, r24
    1502:	21 f0       	breq	.+8      	; 0x150c <vMBPortSerialEnable+0x16>
    1504:	80 91 c1 00 	lds	r24, 0x00C1
    1508:	80 69       	ori	r24, 0x90	; 144
    150a:	03 c0       	rjmp	.+6      	; 0x1512 <vMBPortSerialEnable+0x1c>
    150c:	80 91 c1 00 	lds	r24, 0x00C1
    1510:	8f 76       	andi	r24, 0x6F	; 111
    1512:	80 93 c1 00 	sts	0x00C1, r24
    1516:	80 91 c1 00 	lds	r24, 0x00C1
    151a:	66 23       	and	r22, r22
    151c:	29 f0       	breq	.+10     	; 0x1528 <vMBPortSerialEnable+0x32>
    151e:	88 62       	ori	r24, 0x28	; 40
    1520:	80 93 c1 00 	sts	0x00C1, r24
    1524:	5a 9a       	sbi	0x0b, 2	; 11
    1526:	08 95       	ret
    1528:	8f 7d       	andi	r24, 0xDF	; 223
    152a:	80 93 c1 00 	sts	0x00C1, r24
    152e:	08 95       	ret

00001530 <xMBPortSerialInit>:
    1530:	cf 92       	push	r12
    1532:	df 92       	push	r13
    1534:	ef 92       	push	r14
    1536:	ff 92       	push	r15
    1538:	0f 93       	push	r16
    153a:	cf 93       	push	r28
    153c:	6a 01       	movw	r12, r20
    153e:	7b 01       	movw	r14, r22
    1540:	c2 2f       	mov	r28, r18
    1542:	84 e0       	ldi	r24, 0x04	; 4
    1544:	cc 0c       	add	r12, r12
    1546:	dd 1c       	adc	r13, r13
    1548:	ee 1c       	adc	r14, r14
    154a:	ff 1c       	adc	r15, r15
    154c:	8a 95       	dec	r24
    154e:	d1 f7       	brne	.-12     	; 0x1544 <xMBPortSerialInit+0x14>
    1550:	60 e1       	ldi	r22, 0x10	; 16
    1552:	7a ea       	ldi	r23, 0xAA	; 170
    1554:	8c e7       	ldi	r24, 0x7C	; 124
    1556:	90 e0       	ldi	r25, 0x00	; 0
    1558:	a7 01       	movw	r20, r14
    155a:	96 01       	movw	r18, r12
    155c:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <__udivmodsi4>
    1560:	21 50       	subi	r18, 0x01	; 1
    1562:	31 09       	sbc	r19, r1
    1564:	30 93 c5 00 	sts	0x00C5, r19
    1568:	20 93 c4 00 	sts	0x00C4, r18
    156c:	01 30       	cpi	r16, 0x01	; 1
    156e:	21 f0       	breq	.+8      	; 0x1578 <xMBPortSerialInit+0x48>
    1570:	02 30       	cpi	r16, 0x02	; 2
    1572:	21 f0       	breq	.+8      	; 0x157c <xMBPortSerialInit+0x4c>
    1574:	80 e0       	ldi	r24, 0x00	; 0
    1576:	03 c0       	rjmp	.+6      	; 0x157e <xMBPortSerialInit+0x4e>
    1578:	80 e3       	ldi	r24, 0x30	; 48
    157a:	01 c0       	rjmp	.+2      	; 0x157e <xMBPortSerialInit+0x4e>
    157c:	80 e2       	ldi	r24, 0x20	; 32
    157e:	c7 30       	cpi	r28, 0x07	; 7
    1580:	21 f0       	breq	.+8      	; 0x158a <xMBPortSerialInit+0x5a>
    1582:	c8 30       	cpi	r28, 0x08	; 8
    1584:	19 f4       	brne	.+6      	; 0x158c <xMBPortSerialInit+0x5c>
    1586:	86 60       	ori	r24, 0x06	; 6
    1588:	01 c0       	rjmp	.+2      	; 0x158c <xMBPortSerialInit+0x5c>
    158a:	84 60       	ori	r24, 0x04	; 4
    158c:	90 91 c2 00 	lds	r25, 0x00C2
    1590:	98 2b       	or	r25, r24
    1592:	90 93 c2 00 	sts	0x00C2, r25
    1596:	60 e0       	ldi	r22, 0x00	; 0
    1598:	80 e0       	ldi	r24, 0x00	; 0
    159a:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <vMBPortSerialEnable>
    159e:	52 9a       	sbi	0x0a, 2	; 10
    15a0:	5a 98       	cbi	0x0b, 2	; 11
    15a2:	81 e0       	ldi	r24, 0x01	; 1
    15a4:	cf 91       	pop	r28
    15a6:	0f 91       	pop	r16
    15a8:	ff 90       	pop	r15
    15aa:	ef 90       	pop	r14
    15ac:	df 90       	pop	r13
    15ae:	cf 90       	pop	r12
    15b0:	08 95       	ret

000015b2 <xMBPortSerialPutByte>:
    15b2:	80 93 c6 00 	sts	0x00C6, r24
    15b6:	81 e0       	ldi	r24, 0x01	; 1
    15b8:	08 95       	ret

000015ba <xMBPortSerialGetByte>:
    15ba:	20 91 c6 00 	lds	r18, 0x00C6
    15be:	fc 01       	movw	r30, r24
    15c0:	20 83       	st	Z, r18
    15c2:	81 e0       	ldi	r24, 0x01	; 1
    15c4:	08 95       	ret

000015c6 <__vector_19>:
    15c6:	1f 92       	push	r1
    15c8:	0f 92       	push	r0
    15ca:	0f b6       	in	r0, 0x3f	; 63
    15cc:	0f 92       	push	r0
    15ce:	11 24       	eor	r1, r1
    15d0:	2f 93       	push	r18
    15d2:	3f 93       	push	r19
    15d4:	4f 93       	push	r20
    15d6:	5f 93       	push	r21
    15d8:	6f 93       	push	r22
    15da:	7f 93       	push	r23
    15dc:	8f 93       	push	r24
    15de:	9f 93       	push	r25
    15e0:	af 93       	push	r26
    15e2:	bf 93       	push	r27
    15e4:	ef 93       	push	r30
    15e6:	ff 93       	push	r31
    15e8:	e0 91 e3 01 	lds	r30, 0x01E3
    15ec:	f0 91 e4 01 	lds	r31, 0x01E4
    15f0:	09 95       	icall
    15f2:	ff 91       	pop	r31
    15f4:	ef 91       	pop	r30
    15f6:	bf 91       	pop	r27
    15f8:	af 91       	pop	r26
    15fa:	9f 91       	pop	r25
    15fc:	8f 91       	pop	r24
    15fe:	7f 91       	pop	r23
    1600:	6f 91       	pop	r22
    1602:	5f 91       	pop	r21
    1604:	4f 91       	pop	r20
    1606:	3f 91       	pop	r19
    1608:	2f 91       	pop	r18
    160a:	0f 90       	pop	r0
    160c:	0f be       	out	0x3f, r0	; 63
    160e:	0f 90       	pop	r0
    1610:	1f 90       	pop	r1
    1612:	18 95       	reti

00001614 <__vector_18>:
    1614:	1f 92       	push	r1
    1616:	0f 92       	push	r0
    1618:	0f b6       	in	r0, 0x3f	; 63
    161a:	0f 92       	push	r0
    161c:	11 24       	eor	r1, r1
    161e:	2f 93       	push	r18
    1620:	3f 93       	push	r19
    1622:	4f 93       	push	r20
    1624:	5f 93       	push	r21
    1626:	6f 93       	push	r22
    1628:	7f 93       	push	r23
    162a:	8f 93       	push	r24
    162c:	9f 93       	push	r25
    162e:	af 93       	push	r26
    1630:	bf 93       	push	r27
    1632:	ef 93       	push	r30
    1634:	ff 93       	push	r31
    1636:	e0 91 e7 01 	lds	r30, 0x01E7
    163a:	f0 91 e8 01 	lds	r31, 0x01E8
    163e:	09 95       	icall
    1640:	ff 91       	pop	r31
    1642:	ef 91       	pop	r30
    1644:	bf 91       	pop	r27
    1646:	af 91       	pop	r26
    1648:	9f 91       	pop	r25
    164a:	8f 91       	pop	r24
    164c:	7f 91       	pop	r23
    164e:	6f 91       	pop	r22
    1650:	5f 91       	pop	r21
    1652:	4f 91       	pop	r20
    1654:	3f 91       	pop	r19
    1656:	2f 91       	pop	r18
    1658:	0f 90       	pop	r0
    165a:	0f be       	out	0x3f, r0	; 63
    165c:	0f 90       	pop	r0
    165e:	1f 90       	pop	r1
    1660:	18 95       	reti

00001662 <__vector_20>:
    1662:	1f 92       	push	r1
    1664:	0f 92       	push	r0
    1666:	0f b6       	in	r0, 0x3f	; 63
    1668:	0f 92       	push	r0
    166a:	11 24       	eor	r1, r1
    166c:	5a 98       	cbi	0x0b, 2	; 11
    166e:	0f 90       	pop	r0
    1670:	0f be       	out	0x3f, r0	; 63
    1672:	0f 90       	pop	r0
    1674:	1f 90       	pop	r1
    1676:	18 95       	reti

00001678 <xMBPortEventInit>:
    1678:	10 92 8f 01 	sts	0x018F, r1
    167c:	81 e0       	ldi	r24, 0x01	; 1
    167e:	08 95       	ret

00001680 <xMBPortEventPost>:
    1680:	91 e0       	ldi	r25, 0x01	; 1
    1682:	90 93 8f 01 	sts	0x018F, r25
    1686:	80 93 90 01 	sts	0x0190, r24
    168a:	81 e0       	ldi	r24, 0x01	; 1
    168c:	08 95       	ret

0000168e <xMBPortEventGet>:
    168e:	20 91 8f 01 	lds	r18, 0x018F
    1692:	22 23       	and	r18, r18
    1694:	41 f0       	breq	.+16     	; 0x16a6 <xMBPortEventGet+0x18>
    1696:	20 91 90 01 	lds	r18, 0x0190
    169a:	fc 01       	movw	r30, r24
    169c:	20 83       	st	Z, r18
    169e:	10 92 8f 01 	sts	0x018F, r1
    16a2:	81 e0       	ldi	r24, 0x01	; 1
    16a4:	08 95       	ret
    16a6:	80 e0       	ldi	r24, 0x00	; 0
    16a8:	08 95       	ret

000016aa <vMBPortTimersEnable>:
    16aa:	10 92 85 00 	sts	0x0085, r1
    16ae:	10 92 84 00 	sts	0x0084, r1
    16b2:	80 91 91 01 	lds	r24, 0x0191
    16b6:	90 91 92 01 	lds	r25, 0x0192
    16ba:	89 2b       	or	r24, r25
    16bc:	69 f0       	breq	.+26     	; 0x16d8 <vMBPortTimersEnable+0x2e>
    16be:	80 91 6f 00 	lds	r24, 0x006F
    16c2:	82 60       	ori	r24, 0x02	; 2
    16c4:	80 93 6f 00 	sts	0x006F, r24
    16c8:	80 91 91 01 	lds	r24, 0x0191
    16cc:	90 91 92 01 	lds	r25, 0x0192
    16d0:	90 93 89 00 	sts	0x0089, r25
    16d4:	80 93 88 00 	sts	0x0088, r24
    16d8:	80 91 81 00 	lds	r24, 0x0081
    16dc:	85 60       	ori	r24, 0x05	; 5
    16de:	80 93 81 00 	sts	0x0081, r24
    16e2:	08 95       	ret

000016e4 <vMBPortTimersDisable>:
    16e4:	e1 e8       	ldi	r30, 0x81	; 129
    16e6:	f0 e0       	ldi	r31, 0x00	; 0
    16e8:	80 81       	ld	r24, Z
    16ea:	8a 7f       	andi	r24, 0xFA	; 250
    16ec:	80 83       	st	Z, r24
    16ee:	ef e6       	ldi	r30, 0x6F	; 111
    16f0:	f0 e0       	ldi	r31, 0x00	; 0
    16f2:	80 81       	ld	r24, Z
    16f4:	8d 7f       	andi	r24, 0xFD	; 253
    16f6:	80 83       	st	Z, r24
    16f8:	b1 9a       	sbi	0x16, 1	; 22
    16fa:	08 95       	ret

000016fc <xMBPortTimersInit>:
    16fc:	9c 01       	movw	r18, r24
    16fe:	aa e2       	ldi	r26, 0x2A	; 42
    1700:	bf e1       	ldi	r27, 0x1F	; 31
    1702:	0e 94 18 0c 	call	0x1830	; 0x1830 <__umulhisi3>
    1706:	20 e2       	ldi	r18, 0x20	; 32
    1708:	3e e4       	ldi	r19, 0x4E	; 78
    170a:	40 e0       	ldi	r20, 0x00	; 0
    170c:	50 e0       	ldi	r21, 0x00	; 0
    170e:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <__udivmodsi4>
    1712:	30 93 92 01 	sts	0x0192, r19
    1716:	20 93 91 01 	sts	0x0191, r18
    171a:	10 92 80 00 	sts	0x0080, r1
    171e:	10 92 81 00 	sts	0x0081, r1
    1722:	10 92 82 00 	sts	0x0082, r1
    1726:	0e 94 72 0b 	call	0x16e4	; 0x16e4 <vMBPortTimersDisable>
    172a:	81 e0       	ldi	r24, 0x01	; 1
    172c:	08 95       	ret

0000172e <__vector_11>:
    172e:	1f 92       	push	r1
    1730:	0f 92       	push	r0
    1732:	0f b6       	in	r0, 0x3f	; 63
    1734:	0f 92       	push	r0
    1736:	11 24       	eor	r1, r1
    1738:	2f 93       	push	r18
    173a:	3f 93       	push	r19
    173c:	4f 93       	push	r20
    173e:	5f 93       	push	r21
    1740:	6f 93       	push	r22
    1742:	7f 93       	push	r23
    1744:	8f 93       	push	r24
    1746:	9f 93       	push	r25
    1748:	af 93       	push	r26
    174a:	bf 93       	push	r27
    174c:	ef 93       	push	r30
    174e:	ff 93       	push	r31
    1750:	e0 91 e5 01 	lds	r30, 0x01E5
    1754:	f0 91 e6 01 	lds	r31, 0x01E6
    1758:	09 95       	icall
    175a:	ff 91       	pop	r31
    175c:	ef 91       	pop	r30
    175e:	bf 91       	pop	r27
    1760:	af 91       	pop	r26
    1762:	9f 91       	pop	r25
    1764:	8f 91       	pop	r24
    1766:	7f 91       	pop	r23
    1768:	6f 91       	pop	r22
    176a:	5f 91       	pop	r21
    176c:	4f 91       	pop	r20
    176e:	3f 91       	pop	r19
    1770:	2f 91       	pop	r18
    1772:	0f 90       	pop	r0
    1774:	0f be       	out	0x3f, r0	; 63
    1776:	0f 90       	pop	r0
    1778:	1f 90       	pop	r1
    177a:	18 95       	reti

0000177c <usMBCRC16>:
    0x40
};

USHORT
usMBCRC16( UCHAR * pucFrame, USHORT usLen )
{
    177c:	dc 01       	movw	r26, r24
    UCHAR           ucCRCHi = 0xFF;
    177e:	4f ef       	ldi	r20, 0xFF	; 255
    UCHAR           ucCRCLo = 0xFF;
    1780:	24 2f       	mov	r18, r20

    while( usLen-- )
    {
        iIndex = ucCRCLo ^ *( pucFrame++ );
        ucCRCLo = ucCRCHi ^ pgm_read_byte( &aucCRCHi[iIndex] );
        ucCRCHi = pgm_read_byte( &aucCRCLo[iIndex] );;
    1782:	61 50       	subi	r22, 0x01	; 1
    1784:	70 40       	sbci	r23, 0x00	; 0
    1786:	8f ef       	ldi	r24, 0xFF	; 255
    1788:	6f 3f       	cpi	r22, 0xFF	; 255
    178a:	78 07       	cpc	r23, r24
    178c:	99 f0       	breq	.+38     	; 0x17b4 <usMBCRC16+0x38>
    UCHAR           ucCRCLo = 0xFF;
    int             iIndex;

    while( usLen-- )
    {
        iIndex = ucCRCLo ^ *( pucFrame++ );
    178e:	8d 91       	ld	r24, X+
    1790:	48 27       	eor	r20, r24
    1792:	84 2f       	mov	r24, r20
    1794:	99 27       	eor	r25, r25
        ucCRCLo = ucCRCHi ^ pgm_read_byte( &aucCRCHi[iIndex] );
    1796:	fc 01       	movw	r30, r24
    1798:	e8 59       	subi	r30, 0x98	; 152
    179a:	fe 4f       	sbci	r31, 0xFE	; 254
    179c:	44 91       	lpm	r20, Z
    179e:	42 27       	eor	r20, r18
        ucCRCHi = pgm_read_byte( &aucCRCLo[iIndex] );;
    17a0:	88 59       	subi	r24, 0x98	; 152
    17a2:	9f 4f       	sbci	r25, 0xFF	; 255
    17a4:	fc 01       	movw	r30, r24
    17a6:	24 91       	lpm	r18, Z
    17a8:	61 50       	subi	r22, 0x01	; 1
    17aa:	70 40       	sbci	r23, 0x00	; 0
    17ac:	ff ef       	ldi	r31, 0xFF	; 255
    17ae:	6f 3f       	cpi	r22, 0xFF	; 255
    17b0:	7f 07       	cpc	r23, r31
    17b2:	69 f7       	brne	.-38     	; 0x178e <usMBCRC16+0x12>
    }
    return ucCRCHi << 8 | ucCRCLo;
    17b4:	82 2f       	mov	r24, r18
    17b6:	99 27       	eor	r25, r25
    17b8:	38 2f       	mov	r19, r24
    17ba:	22 27       	eor	r18, r18
    17bc:	84 2f       	mov	r24, r20
    17be:	99 27       	eor	r25, r25
}
    17c0:	82 2b       	or	r24, r18
    17c2:	93 2b       	or	r25, r19
    17c4:	08 95       	ret

000017c6 <main>:
    17c6:	0e 94 53 01 	call	0x2a6	; 0x2a6 <SYS_init>
    17ca:	0e 94 82 02 	call	0x504	; 0x504 <SERVO_enable>
    17ce:	0e 94 7f 05 	call	0xafe	; 0xafe <eMBEnable>
    17d2:	0e 94 a1 05 	call	0xb42	; 0xb42 <eMBPoll>
    17d6:	83 ed       	ldi	r24, 0xD3	; 211
    17d8:	91 e0       	ldi	r25, 0x01	; 1
    17da:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <RELAY_poll>
    17de:	63 e9       	ldi	r22, 0x93	; 147
    17e0:	71 e0       	ldi	r23, 0x01	; 1
    17e2:	83 ed       	ldi	r24, 0xD3	; 211
    17e4:	91 e0       	ldi	r25, 0x01	; 1
    17e6:	0e 94 03 03 	call	0x606	; 0x606 <SERVO_poll>
    17ea:	f3 cf       	rjmp	.-26     	; 0x17d2 <main+0xc>

000017ec <__udivmodsi4>:
    17ec:	a1 e2       	ldi	r26, 0x21	; 33
    17ee:	1a 2e       	mov	r1, r26
    17f0:	aa 1b       	sub	r26, r26
    17f2:	bb 1b       	sub	r27, r27
    17f4:	fd 01       	movw	r30, r26
    17f6:	0d c0       	rjmp	.+26     	; 0x1812 <__udivmodsi4_ep>

000017f8 <__udivmodsi4_loop>:
    17f8:	aa 1f       	adc	r26, r26
    17fa:	bb 1f       	adc	r27, r27
    17fc:	ee 1f       	adc	r30, r30
    17fe:	ff 1f       	adc	r31, r31
    1800:	a2 17       	cp	r26, r18
    1802:	b3 07       	cpc	r27, r19
    1804:	e4 07       	cpc	r30, r20
    1806:	f5 07       	cpc	r31, r21
    1808:	20 f0       	brcs	.+8      	; 0x1812 <__udivmodsi4_ep>
    180a:	a2 1b       	sub	r26, r18
    180c:	b3 0b       	sbc	r27, r19
    180e:	e4 0b       	sbc	r30, r20
    1810:	f5 0b       	sbc	r31, r21

00001812 <__udivmodsi4_ep>:
    1812:	66 1f       	adc	r22, r22
    1814:	77 1f       	adc	r23, r23
    1816:	88 1f       	adc	r24, r24
    1818:	99 1f       	adc	r25, r25
    181a:	1a 94       	dec	r1
    181c:	69 f7       	brne	.-38     	; 0x17f8 <__udivmodsi4_loop>
    181e:	60 95       	com	r22
    1820:	70 95       	com	r23
    1822:	80 95       	com	r24
    1824:	90 95       	com	r25
    1826:	9b 01       	movw	r18, r22
    1828:	ac 01       	movw	r20, r24
    182a:	bd 01       	movw	r22, r26
    182c:	cf 01       	movw	r24, r30
    182e:	08 95       	ret

00001830 <__umulhisi3>:
    1830:	a2 9f       	mul	r26, r18
    1832:	b0 01       	movw	r22, r0
    1834:	b3 9f       	mul	r27, r19
    1836:	c0 01       	movw	r24, r0
    1838:	a3 9f       	mul	r26, r19
    183a:	70 0d       	add	r23, r0
    183c:	81 1d       	adc	r24, r1
    183e:	11 24       	eor	r1, r1
    1840:	91 1d       	adc	r25, r1
    1842:	b2 9f       	mul	r27, r18
    1844:	70 0d       	add	r23, r0
    1846:	81 1d       	adc	r24, r1
    1848:	11 24       	eor	r1, r1
    184a:	91 1d       	adc	r25, r1
    184c:	08 95       	ret

0000184e <memcpy>:
    184e:	fb 01       	movw	r30, r22
    1850:	dc 01       	movw	r26, r24
    1852:	02 c0       	rjmp	.+4      	; 0x1858 <memcpy+0xa>
    1854:	01 90       	ld	r0, Z+
    1856:	0d 92       	st	X+, r0
    1858:	41 50       	subi	r20, 0x01	; 1
    185a:	50 40       	sbci	r21, 0x00	; 0
    185c:	d8 f7       	brcc	.-10     	; 0x1854 <memcpy+0x6>
    185e:	08 95       	ret

00001860 <__eerd_byte_m168p>:
    1860:	f9 99       	sbic	0x1f, 1	; 31
    1862:	fe cf       	rjmp	.-4      	; 0x1860 <__eerd_byte_m168p>
    1864:	92 bd       	out	0x22, r25	; 34
    1866:	81 bd       	out	0x21, r24	; 33
    1868:	f8 9a       	sbi	0x1f, 0	; 31
    186a:	99 27       	eor	r25, r25
    186c:	80 b5       	in	r24, 0x20	; 32
    186e:	08 95       	ret

00001870 <__eerd_word_m168p>:
    1870:	a8 e1       	ldi	r26, 0x18	; 24
    1872:	b0 e0       	ldi	r27, 0x00	; 0
    1874:	42 e0       	ldi	r20, 0x02	; 2
    1876:	50 e0       	ldi	r21, 0x00	; 0
    1878:	0c 94 53 0c 	jmp	0x18a6	; 0x18a6 <__eerd_blraw_m168p>

0000187c <__eewr_byte_m168p>:
    187c:	26 2f       	mov	r18, r22

0000187e <__eewr_r18_m168p>:
    187e:	f9 99       	sbic	0x1f, 1	; 31
    1880:	fe cf       	rjmp	.-4      	; 0x187e <__eewr_r18_m168p>
    1882:	1f ba       	out	0x1f, r1	; 31
    1884:	92 bd       	out	0x22, r25	; 34
    1886:	81 bd       	out	0x21, r24	; 33
    1888:	20 bd       	out	0x20, r18	; 32
    188a:	0f b6       	in	r0, 0x3f	; 63
    188c:	f8 94       	cli
    188e:	fa 9a       	sbi	0x1f, 2	; 31
    1890:	f9 9a       	sbi	0x1f, 1	; 31
    1892:	0f be       	out	0x3f, r0	; 63
    1894:	01 96       	adiw	r24, 0x01	; 1
    1896:	08 95       	ret

00001898 <__eewr_word_m168p>:
    1898:	0e 94 3e 0c 	call	0x187c	; 0x187c <__eewr_byte_m168p>
    189c:	27 2f       	mov	r18, r23
    189e:	0c 94 3f 0c 	jmp	0x187e	; 0x187e <__eewr_r18_m168p>

000018a2 <__eerd_block_m168p>:
    18a2:	dc 01       	movw	r26, r24
    18a4:	cb 01       	movw	r24, r22

000018a6 <__eerd_blraw_m168p>:
    18a6:	fc 01       	movw	r30, r24
    18a8:	f9 99       	sbic	0x1f, 1	; 31
    18aa:	fe cf       	rjmp	.-4      	; 0x18a8 <__eerd_blraw_m168p+0x2>
    18ac:	06 c0       	rjmp	.+12     	; 0x18ba <__eerd_blraw_m168p+0x14>
    18ae:	f2 bd       	out	0x22, r31	; 34
    18b0:	e1 bd       	out	0x21, r30	; 33
    18b2:	f8 9a       	sbi	0x1f, 0	; 31
    18b4:	31 96       	adiw	r30, 0x01	; 1
    18b6:	00 b4       	in	r0, 0x20	; 32
    18b8:	0d 92       	st	X+, r0
    18ba:	41 50       	subi	r20, 0x01	; 1
    18bc:	50 40       	sbci	r21, 0x00	; 0
    18be:	b8 f7       	brcc	.-18     	; 0x18ae <__eerd_blraw_m168p+0x8>
    18c0:	08 95       	ret

000018c2 <_exit>:
    18c2:	f8 94       	cli

000018c4 <__stop_program>:
    18c4:	ff cf       	rjmp	.-2      	; 0x18c4 <__stop_program>
